{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ConfirmationPopup.js","components/ImagePopup.js","utils/Api.js","utils/constants.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","href","CurrentUserContext","React","createContext","Chat","memo","onCardClick","onCardLike","card","onConfirmation","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","src","link","alt","name","onClick","type","length","Main","props","avatar","onEditAvatar","onEditProfile","about","onAddPlace","isLoading","cards","map","key","Card","Footer","PopupWithForm","isOpen","title","onSubmit","children","buttonText","onClose","EditProfilePopup","useState","SetName","description","SetDescription","useEffect","e","preventDefault","onUpdateUser","id","required","minLength","maxLength","placeholder","value","onChange","target","EditAvatarPopup","SetAvatar","inputAvatarRef","useRef","current","onUpdateAvatar","ref","AddPlacePopup","SetLink","ConfirmationPopup","ImagePopup","Object","keys","api","cohort","token","baseUrl","this","_cohort","_token","_baseUrl","res","ok","json","Promise","reject","status","nameUser","aboutUser","fetch","method","headers","authorization","body","JSON","stringify","then","_checkResponse","nameCard","linkCard","cardId","App","SetCurrentUser","SetIsLoading","SetCard","isEditProfilePopupOpen","SetIsEditProfilePopupOpen","isAddPlacePopupOpen","SetIsAddPlacePopupOpen","isEditAvatarPopupOpen","SetIsEditAvatarPopupOpen","isConfirmationPopupOpen","SetIsConfirmationPopupOpen","selectedCard","SetSelectedCard","SetCards","closeAllPopups","all","getUserInformation","getCards","data","item","catch","err","console","error","finally","Provider","changeLikeCardStatus","newCard","state","c","updateUserInformation","updateUserAvatar","addCard","deleteCard","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac111dfb.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <a href=\"#\" className=\"header__logo\"></a>\n    </header>\n  );\n}\n\nexport default Header;","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();","import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nconst Chat = React.memo(({ onCardClick, onCardLike, card, onConfirmation }) => {\n\n    /** Подписка на контекст CurrentUserContext */\n    const currentUser = React.useContext(CurrentUserContext);\n\n    /** Определяет, является ли пользователь владельцем текущей карточки */\n    const isOwn = card.owner._id === currentUser._id;\n\n    /** Содержит классы для кнопки удаления карточки  */\n    const cardDeleteButtonClassName = (\n      `card__trash ${isOwn ? '' : 'card__trash_disable'}`\n    );\n\n    /** Определяет, ставил ли пользователь лайк для текущей карточки */\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    /** Содержит классы для кнопки лайк */\n    const cardLikeButtonClassName = (\n      `card__icon-like ${isLiked ? 'card__icon-like_active' : ''}`\n    );\n    \n    /** Событие при клике на изображение карточки */\n    function handleClick() {\n      onCardClick(card);\n    }\n\n    /** Событие при клике на кнопку \"лайк\" */\n    function handleLikeClick() {\n      onCardLike(card);\n    }\n\n    /** Событие при клике на кнопку \"удалить\" (Открывает окно подтверждения) */\n    function handleDeleteClick() {\n      onConfirmation(card);\n    }\n\n    return (\n      <li className=\"card\">\n        <img className=\"card__image\"\n            src={card.link}\n            alt={card.name} \n            onClick={handleClick}/>\n        <h2 className=\"card__name\">{card.name}</h2>\n        <div className=\"card__like-container\">\n          <button className={cardLikeButtonClassName}\n                  type=\"button\"\n                  onClick={handleLikeClick}></button>\n          <span className=\"card__like-counter\">{card.likes.length}</span>\n        </div>\n        <button className={cardDeleteButtonClassName}\n                type=\"button\"\n                onClick={handleDeleteClick}></button>\n      </li>\n    );\n  }\n); \n\nexport default Chat;","import React from 'react';\nimport Card from './Card'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Main(props) {\n\n  /** Подписка на контекст CurrentUserContext */\n  const currentUser = React.useContext(CurrentUserContext);\n\n  return (\n    <main className=\"content page__content\">\n      <section className=\"profile\">\n        <div className=\"profile__avatar-container\">\n          <img className=\"profile__avatar\"\n               src={currentUser.avatar}\n               alt=\"Аватарка пользователя.\" />\n          <button className=\"profile__edit-avatar\"\n                  onClick={props.onEditAvatar}></button>\n        </div>\n        <div className=\"profile__info\">\n          <h1 className=\"profile__name\">{currentUser.name}</h1>\n          <button className=\"profile__edit-button\" type=\"button\"\n                  onClick={props.onEditProfile}></button>\n          <p className=\"profile__description\">{currentUser.about}</p>\n        </div>\n        <button className=\"profile__add-button\" type=\"button\"\n                onClick={props.onAddPlace}></button>\n      </section>\n\n      <section className=\"places content__places\">\n        <ul className=\"cards\">\n          { \n            props.isLoading ? \n            \"\" :\n            props.cards.map(({ key, ...card }) => (\n                <Card onCardClick={props.onCardClick}\n                      key={card._id}\n                      card={{...card}}\n                      onConfirmation={props.onConfirmation}\n                      onCardLike={props.onCardLike} >\n                </Card>\n              ) \n            )\n          }\n        </ul>\n      </section>\n    </main>\n  );\n}\n\nexport default Main;","import React from \"react\";\n\nfunction Footer () {\n  return (\n    <footer className=\"footer page__footer\">\n      <p className=\"footer__copyright\">&copy; 2021. Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\n\nfunction PopupWithForm (props) {\n\n  return (\n    <div className={`popup popup_type_${props.name}\n                  ${props.isOpen && \"popup_opened\"}`}>\n      <div className=\"popup__container popup__container_type_form\">\n        <h2 className=\"popup__title\">{props.title}</h2>\n        <form className=\"popup__form\" name={`form-${props.name}`} onSubmit={props.onSubmit}>\n          {props.children}\n          <button className=\"popup__button\" type=\"submit\">\n            {props.isLoading ? `${props.buttonText}...` : `${props.buttonText}`}\n          </button>\n        </form>\n        <button className=\"popup__icon-close\"\n                type=\"button\"\n                onClick={props.onClose}></button>\n      </div>\n    </div>\n  );\n}\n\nexport default PopupWithForm;","import React from \"react\";\nimport PopupWithForm from './PopupWithForm'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup(props) {\n\n  /** Текущий пользователь */\n  const currentUser = React.useContext(CurrentUserContext);\n\n  const [name, SetName] = React.useState('');\n  const [description, SetDescription] = React.useState('');\n\n  /** Записывает информацию о пользователе в стейт-переменные */\n  React.useEffect(() => {\n    SetName(currentUser.name);\n    SetDescription(currentUser.about);\n  }, [currentUser, props.isOpen]); \n\n  /** Отправляет запрос к api. Обновляет информацию о пользователе */\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onUpdateUser({\n      name,\n      about: description,\n    });\n  }\n  \n  /** Записывает имя пользователя в стейт-переменную */\n  function handleChangeName(e) {\n    SetName(e.target.value);\n  }\n\n  /** Записывает описание пользователя в стейт-переменную */\n  function handleChangeDescription(e) {\n    SetDescription(e.target.value);\n  }\n\n  return (\n    <PopupWithForm title=\"Редактировать профиль\" name=\"edit-profile\" \n                   isOpen={props.isOpen}\n                   onClose={props.onClose}\n                   onSubmit={handleSubmit}\n                   isLoading={props.isLoading}\n                   buttonText=\"Сохранить\" >\n        <input id=\"name-user-input\" className=\"popup__input popup__input_type_name\"\n               type=\"text\" name=\"name\" required minLength=\"2\" maxLength=\"40\"\n               placeholder=\"Имя пользователя\"\n               value={name || ''} onChange={handleChangeName} />\n        <span className=\"popup__input-error name-user-input-error\"></span>\n        <input id=\"description-input\" className=\"popup__input popup__input_type_description\"\n               type=\"text\" name=\"description\" required minLength=\"2\" maxLength=\"200\"\n               placeholder=\"Информация о пользователе\"\n               value={description || ''} onChange={handleChangeDescription} />\n        <span className=\"popup__input-error description-input-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;","import React from \"react\";\nimport PopupWithForm from './PopupWithForm'\n\nfunction EditAvatarPopup(props) {\n\n  const [avatar, SetAvatar] = React.useState('');\n  const inputAvatarRef = React.useRef();\n\n  /** Отправляет запрос к api. Обновляет аватар пользователя */\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onUpdateAvatar({ avatar: inputAvatarRef.current.value });\n  }\n\n  /** Записывает ссылку на аватарку в стейт-переменную */\n  function handleChange() {\n    SetAvatar(inputAvatarRef.current.value);\n  }\n\n  /** Очищает поле ввода формы обновления аватарки пользователя */\n  React.useEffect(() => {\n    inputAvatarRef.current.value = '';\n  }, [props.isOpen]); \n\n  return (\n    <PopupWithForm title=\"Обновить аватар\" name=\"update-avatar\"\n                   isOpen={props.isOpen}\n                   onClose={props.onClose}\n                   onSubmit={handleSubmit}\n                   isLoading={props.isLoading}\n                   buttonText=\"Сохранить\" >\n      <input id=\"url-input-avatar\" className=\"popup__input popup__input_type_link\"\n             type=\"url\" name=\"link\" required\n             placeholder=\"Ссылка на картинку\"\n             ref={inputAvatarRef} onChange={handleChange} />\n      <span className=\"popup__input-error url-input-avatar-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup;","import React from \"react\";\nimport PopupWithForm from './PopupWithForm'\n\nfunction AddPlacePopup(props) {\n\n  const [name, SetName] = React.useState('');\n  const [link, SetLink] = React.useState('');\n\n  /** Отправляет запрос к api. Добавляет новую карточку */\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onAddPlace({\n      name,\n      link\n    });\n  }\n\n  /** Очищает поля ввода формы добавления новой карточки */\n  React.useEffect(() => {\n    SetName('');\n    SetLink('');\n  }, [props.isOpen]); \n\n  /** Записывает название карточки в стейт-переменную */\n  function handleChangeName(e) {\n    SetName(e.target.value);\n  }\n\n  /** Записывает ссылку на карточку в стейт-переменную */\n  function handleChangeLink(e) {\n    SetLink(e.target.value);\n  }\n\n  return (\n    <PopupWithForm title=\"Новое место\" name=\"add-new-place\"\n                   isOpen={props.isOpen}\n                   onClose={props.onClose}\n                   onSubmit={handleSubmit}\n                   isLoading={props.isLoading} \n                   buttonText=\"Создать\" >\n      <input id=\"name-picture-input\" className=\"popup__input popup__input_type_name\"\n             type=\"text\" name=\"name\" required minLength=\"2\" maxLength=\"30\"\n             placeholder=\"Название\"\n             value={name || ''} onChange={handleChangeName} />\n      <span className=\"popup__input-error name-picture-input-error\"></span>\n      <input id=\"url-input-place\" className=\"popup__input popup__input_type_link\"\n             type=\"url\" name=\"link\" required\n             placeholder=\"Ссылка на картинку\"\n             value={link || ''} onChange={handleChangeLink} />\n      <span className=\"popup__input-error url-input-place-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default AddPlacePopup;","import React from \"react\";\nimport PopupWithForm from './PopupWithForm'\n\nfunction ConfirmationPopup(props) {\n\n  /** Отправляет запрос к api. Удаляет карточку */\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onConfirmation(props.card);\n  }\n\n  return (\n    <PopupWithForm title=\"Вы уверены?\" name=\"confirmation\"\n                   isOpen={props.isOpen}\n                   onClose={props.onClose}\n                   onSubmit={handleSubmit}\n                   isLoading={props.isLoading}\n                   buttonText=\"Да\" >\n    </PopupWithForm>\n  );\n}\n\nexport default ConfirmationPopup;","import React from \"react\";\n\nfunction ImagePopup (props) {\n  \n  return (\n    <div className={`popup popup_type_image\n                  ${(Object.keys(props.card).length !== 0) && \"popup_opened\"}`}>\n      <div className=\"popup__container\">\n        <figure className=\"popup__container-image\">\n          <img className=\"popup__image\"\n              src={props.card.link}\n              alt={props.card.title} />\n          <figcaption className=\"popup__image-title\">{props.card.title}</figcaption>\n        </figure>\n        <button className=\"popup__icon-close\"\n                type=\"button\"\n                onClick={props.onClose}></button>\n      </div>\n    </div>\n  );\n}\n\nexport default ImagePopup;","import { cohort } from './constants.js';\nimport { token } from './constants.js'\nimport { baseUrl } from './constants.js'\n\nclass Api {\n  constructor(cohort, token, baseUrl) {\n    this._cohort = cohort;\n    this._token = token;\n    this._baseUrl = baseUrl;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n}\n\n  updateUserInformation(nameUser, aboutUser) {\n    return fetch(`${this._baseUrl}${this._cohort}/users/me`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: nameUser,\n        about: aboutUser\n      })\n    })\n      .then(this._checkResponse)\n  }\n\n  updateUserAvatar(link) {\n    return fetch(`${this._baseUrl}${this._cohort}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        avatar: link,\n      })\n    })\n      .then(this._checkResponse)\n  }\n\n  getUserInformation() {\n    return fetch(`${this._baseUrl}${this._cohort}/users/me`, {\n      headers: {\n        authorization: this._token\n      }\n    })\n      .then(this._checkResponse)\n  }\n\n  getCards() {\n    return fetch(`${this._baseUrl}${this._cohort}/cards`, {\n      headers: {\n        authorization: this._token\n      }\n    })\n      .then(this._checkResponse)\n  }\n\n  addCard(nameCard, linkCard) {\n    return fetch(`${this._baseUrl}${this._cohort}/cards`, {\n      method: 'POST',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: nameCard,\n        link: linkCard\n      })\n    })\n      .then(this._checkResponse)\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    return fetch(`${this._baseUrl}${this._cohort}/cards/likes/${cardId}`, {\n      method: isLiked ? 'PUT' : 'DELETE',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(this._checkResponse)\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}${this._cohort}/cards/${cardId}`, {\n    method: 'DELETE',\n    headers: {\n        authorization: this._token\n      }\n    })\n      .then(this._checkResponse)\n  }\n\n}\n\nconst api = new Api(cohort, token, baseUrl);\nexport default api;","/* Объект элементов формы. */\n// const validateConfig = {\n//   formSelector: '.popup__form',\n//   inputSelector: '.popup__input',\n//   submitButtonSelector: '.popup__button',\n//   inactiveButtonClass: 'popup__button_inactive',\n//   inputErrorClass: 'popup__input_type_error',\n//   errorClass: 'popup__input-error_active'\n// };\n\n/* Элементы profile. */\n// const buttonEditAvatar = document.querySelector('.profile__edit-avatar');\n// const buttonEditProfile = document.querySelector('.profile__edit-button');\n// const buttonAddNewPlace = document.querySelector('.profile__add-button');\n\n/* Элементы popup_type_update-avatar. */\n// const popupTypeUpdateAvatar = document.querySelector('.popup_type_update-avatar');\n\n/* Элементы popup_type_edit-profile. */\n// const popupTypeEditProfile = document.querySelector('.popup_type_edit-profile');\n// const popupInputNameProfile = popupTypeEditProfile.querySelector('.popup__input_type_name');\n// const popupInputDescription = popupTypeEditProfile.querySelector('.popup__input_type_description');\n\n/* Элементы popup_type_add-new-place. */\n// const popupTypeAddNewPlace = document.querySelector('.popup_type_add-new-place');\n\n/* Данные для api проекта \"mesto\" */\nconst cohort = 'cohort-28';\nconst token = 'b5931bc5-3874-4455-9cea-b058f66f7d9b';\nconst baseUrl = 'https://mesto.nomoreparties.co/v1/'\n\n/* Текст кнопок модальных окон, при отправке запросов */\n// const textSave = \"Сохранить\";\n// const textSaveLoading = \"Сохранить...\";\n// const textCreate = \"Создать\";\n// const textCreateLoading = \"Создать...\"\n\nexport {\n  // validateConfig,\n  // buttonEditAvatar,\n  // buttonEditProfile,\n  // buttonAddNewPlace,\n  // popupInputNameProfile,\n  // popupInputDescription,\n  // popupTypeUpdateAvatar,\n  // popupTypeEditProfile,\n  // popupTypeAddNewPlace,\n  cohort,\n  token,\n  baseUrl,\n  // textSave,\n  // textSaveLoading,\n  // textCreate,\n  // textCreateLoading\n};\n","import React from 'react';\nimport '../index.css';\nimport Header from './Header'\nimport Main from './Main'\nimport Footer from './Footer'\nimport EditProfilePopup from './EditProfilePopup'\nimport EditAvatarPopup from './EditAvatarPopup'\nimport AddPlacePopup from './AddPlacePopup'\nimport ConfirmationPopup from './ConfirmationPopup'\nimport ImagePopup from './ImagePopup'\nimport api from '../utils/Api'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction App() {\n\n  /** Текущий пользователь */\n  const [currentUser, SetCurrentUser] = React.useState({});\n\n  /** Состояние загрузки */\n  const [isLoading, SetIsLoading] = React.useState(false);\n\n  /** Карточка (Для удаления) */\n  const [card, SetCard] = React.useState({});\n\n  const [isEditProfilePopupOpen, SetIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, SetIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, SetIsEditAvatarPopupOpen] = React.useState(false);\n  const [isConfirmationPopupOpen, SetIsConfirmationPopupOpen] = React.useState(false);\n\n  const [selectedCard, SetSelectedCard] = React.useState({});\n\n  /** Массив загруженных карточек */\n  const [cards, SetCards] = React.useState([]);\n\n  /** Открывает окно редактирования профиля */\n  function handleEditProfileClick() {\n    SetIsEditProfilePopupOpen(true);\n  }\n\n  /** Открывает окно добавления новой карточки */\n  function handleAddPlaceClick() {\n    SetIsAddPlacePopupOpen(true);\n  }\n\n  /** Открывает окно обновления аватарки */\n  function handleEditAvatarClick() {\n    SetIsEditAvatarPopupOpen(true);\n  }\n\n  /** Открывает окно подтверждения */\n  function handleConfirmationClick(card) {\n    SetCard(card);\n    SetIsConfirmationPopupOpen(true);\n  }\n\n  /** Открывает окно с увеличенным изображением */\n  function handleCardClick(card) {\n    SetSelectedCard(card);\n  }\n\n  /** Закрывает все модальные окна */\n  function closeAllPopups() {\n    SetIsEditProfilePopupOpen(false);\n    SetIsAddPlacePopupOpen(false);\n    SetIsEditAvatarPopupOpen(false);\n    SetIsConfirmationPopupOpen(false);\n    SetSelectedCard({});\n  }\n\n  /** Запрашивает карточки и информацию о пользователе при загрузке страницы */\n  React.useEffect(() => {\n    SetIsLoading(true);\n    Promise.all([api.getUserInformation(), api.getCards()])\n      .then((data) => {\n        SetCurrentUser(data[0]);\n        SetCards(data[1].map((item) => (item)));\n      })\n      .catch((err) => {\n        console.error(err);\n      })\n      .finally(() => {\n        SetIsLoading(false);\n      });\n  }, [] );\n\n  /** Обновляет информацию о пользователе */\n  function handleUpdateUser({ name, about }) {\n    SetIsLoading(true);\n    api.updateUserInformation(name, about)\n      .then((data) => {\n        SetCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.error(err);\n      })\n      .finally(() => {\n        SetIsLoading(false);\n      });\n  }\n\n  /** Обновляет аватарку пользователя */\n  function handleUpdateAvatar({ avatar }) {\n    SetIsLoading(true);\n    api.updateUserAvatar(avatar)\n      .then((data) => {\n        SetCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.error(err);\n      })\n      .finally(() => {\n        SetIsLoading(false);\n      });\n  }\n\n  /** Добавляет новую карточку */\n  function handleAddPlaceSubmit({ name, link }) {\n    SetIsLoading(true);\n    api.addCard(name, link)\n      .then((newCard) => {\n        SetCards([newCard, ...cards]); \n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.error(err);\n      })\n      .finally(() => {\n        SetIsLoading(false);\n      });\n  }\n\n  /** Удаляет карточку  */\n  function handleCardDeleteSubmit(card) {\n    SetIsLoading(true);\n    api.deleteCard(card._id)\n      .then((data) => {\n        SetCards((state) => state.filter((c) => {\n          return (c._id !== card._id) //Возвращает все карточки кроме той которую удалили\n        }));\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.error(err);\n      })\n      .finally(() => {\n        SetIsLoading(false);\n      });\n  }\n\n  /** Определяет, ставил ли пользователь лайк для текущей карточки\n  *   Ставит/удаляет лайк   */\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        SetCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n      })\n      .catch((err) => {\n        console.error(err);\n      })\n  } \n\n  return (\n    <div className=\"root\">\n\n      <CurrentUserContext.Provider value={currentUser}>\n\n        <div className=\"page root__page\">\n          <Header />\n          <Main onEditProfile={handleEditProfileClick}\n                onAddPlace={handleAddPlaceClick}\n                onEditAvatar={handleEditAvatarClick}\n                onConfirmation={handleConfirmationClick}\n                onCardClick={handleCardClick}\n                cards={cards}\n                onCardLike={handleCardLike}\n                isLoading={isLoading} />\n          <Footer />\n        </div>\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups}\n                          onUpdateUser={handleUpdateUser}\n                          isLoading={isLoading} />\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}\n                         onUpdateAvatar={handleUpdateAvatar}\n                         isLoading={isLoading} /> \n        <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}\n                       onAddPlace={handleAddPlaceSubmit}\n                       isLoading={isLoading} />\n        <ConfirmationPopup isOpen={isConfirmationPopupOpen} onClose={closeAllPopups}\n                                   onConfirmation={handleCardDeleteSubmit}\n                                   isLoading={isLoading}\n                                   card={card} />\n        <ImagePopup card={selectedCard} onClose={closeAllPopups}/>\n\n      </CurrentUserContext.Provider>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}