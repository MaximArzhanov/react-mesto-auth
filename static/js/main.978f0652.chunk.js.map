{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ConfirmationPopup.js","components/ImagePopup.js","components/LoginRegisterForm.js","components/Register.js","components/Login.js","components/InfoToolTip.js","utils/Api.js","utils/constants.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","href","to","CurrentUserContext","React","createContext","Card","memo","onCardClick","onCardLike","card","onConfirmation","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","src","link","alt","name","onClick","type","length","Main","avatar","onEditAvatar","onEditProfile","about","onAddPlace","isLoading","cards","map","Footer","PopupWithForm","isOpen","title","onSubmit","children","buttonText","onClose","EditProfilePopup","useState","SetName","description","SetDescription","useEffect","e","preventDefault","onUpdateUser","id","required","minLength","maxLength","placeholder","value","onChange","target","EditAvatarPopup","SetAvatar","inputAvatarRef","useRef","current","onUpdateAvatar","ref","AddPlacePopup","SetLink","ConfirmationPopup","ImagePopup","Object","keys","LoginRegisterForm","textButton","Register","Login","InfoToolTip","api","cohort","token","baseUrl","this","_cohort","_token","_baseUrl","res","ok","json","Promise","reject","status","nameUser","aboutUser","fetch","method","headers","authorization","body","JSON","stringify","then","_checkResponse","nameCard","linkCard","cardId","App","SetCurrentUser","SetIsLoading","SetCard","isEditProfilePopupOpen","SetIsEditProfilePopupOpen","isAddPlacePopupOpen","SetIsAddPlacePopupOpen","isEditAvatarPopupOpen","SetIsEditAvatarPopupOpen","isConfirmationPopupOpen","SetIsConfirmationPopupOpen","isRegistationResultPopupOpen","SetIsRegistationResultPopupOpen","selectedCard","SetSelectedCard","SetCards","handleRegistration","closeAllPopups","all","getUserInformation","getCards","data","item","catch","err","console","error","finally","Provider","exact","path","element","changeLikeCardStatus","newCard","state","c","updateUserInformation","updateUserAvatar","addCard","deleteCard","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAgBeA,MAbf,SAAgBC,GAGd,OACE,yBAAQC,UAAU,SAAlB,UACE,mBAAGC,KAAK,IAAID,UAAU,iBACtB,cAAC,IAAD,CAAME,GAAG,WAAWF,UAAU,oBAA9B,gD,QCPOG,EAAqBC,IAAMC,gBC0DzBC,EAzDFF,IAAMG,MAAK,YAAwD,IAArDC,EAAoD,EAApDA,YAAaC,EAAuC,EAAvCA,WAAYC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,eAGhDC,EAAcR,IAAMS,WAAWV,GAG/BW,EAAQJ,EAAKK,MAAMC,MAAQJ,EAAYI,IAGvCC,EAAyB,sBACdH,EAAQ,GAAK,uBAIxBI,EAAUR,EAAKS,MAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAEL,MAAQJ,EAAYI,OAGrDM,EAAuB,0BACRJ,EAAU,yBAA2B,IAkB1D,OACE,qBAAIlB,UAAU,OAAd,UACE,qBAAKA,UAAU,cACXuB,IAAKb,EAAKc,KACVC,IAAKf,EAAKgB,KACVC,QAnBR,WACEnB,EAAYE,MAmBV,oBAAIV,UAAU,aAAd,SAA4BU,EAAKgB,OACjC,sBAAK1B,UAAU,uBAAf,UACE,wBAAQA,UAAWsB,EACXM,KAAK,SACLD,QAnBd,WACElB,EAAWC,MAmBP,sBAAMV,UAAU,qBAAhB,SAAsCU,EAAKS,MAAMU,YAEnD,wBAAQ7B,UAAWiB,EACXW,KAAK,SACLD,QAnBZ,WACEhB,EAAeD,YCcNoB,MA9Cf,SAAc/B,GAGZ,IAAMa,EAAcR,IAAMS,WAAWV,GAErC,OACE,uBAAMH,UAAU,wBAAhB,UACE,0BAASA,UAAU,UAAnB,UACE,sBAAKA,UAAU,4BAAf,UACE,qBAAKA,UAAU,kBACVuB,IAAKX,EAAYmB,OACjBN,IAAI,+HACT,wBAAQzB,UAAU,uBACV2B,QAAS5B,EAAMiC,kBAEzB,sBAAKhC,UAAU,gBAAf,UACE,oBAAIA,UAAU,gBAAd,SAA+BY,EAAYc,OAC3C,wBAAQ1B,UAAU,uBAAuB4B,KAAK,SACtCD,QAAS5B,EAAMkC,gBACvB,mBAAGjC,UAAU,uBAAb,SAAqCY,EAAYsB,WAEnD,wBAAQlC,UAAU,sBAAsB4B,KAAK,SACrCD,QAAS5B,EAAMoC,gBAGzB,yBAASnC,UAAU,yBAAnB,SACE,oBAAIA,UAAU,QAAd,SAEID,EAAMqC,UACN,GACArC,EAAMsC,MAAMC,KAAI,gBAAK5B,EAAL,2BACZ,cAAC,EAAD,CAAMF,YAAaT,EAAMS,YAEnBE,KAAI,eAAMA,GACVC,eAAgBZ,EAAMY,eACtBF,WAAYV,EAAMU,YAHbC,EAAKM,gBC1BjBuB,MARf,WACE,OACE,wBAAQvC,UAAU,sBAAlB,SACE,mBAAGA,UAAU,oBAAb,wCCmBSwC,MAtBf,SAAwBzC,GAEtB,OACE,qBAAKC,UAAS,2BAAsBD,EAAM2B,KAA5B,+BACE3B,EAAM0C,QAAU,gBADhC,SAEE,sBAAKzC,UAAU,8CAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BD,EAAM2C,QACpC,uBAAM1C,UAAU,OAAO0B,KAAI,eAAU3B,EAAM2B,MAAQiB,SAAU5C,EAAM4C,SAAnE,UACG5C,EAAM6C,SACP,wBAAQ5C,UAAU,eAAe4B,KAAK,SAAtC,SACG7B,EAAMqC,UAAN,UAAqBrC,EAAM8C,WAA3B,iBAAgD9C,EAAM8C,iBAG3D,wBAAQ7C,UAAU,oBACV4B,KAAK,SACLD,QAAS5B,EAAM+C,gBCyChBC,MAtDf,SAA0BhD,GAGxB,IAAMa,EAAcR,IAAMS,WAAWV,GAErC,EAAwBC,IAAM4C,SAAS,IAAvC,mBAAOtB,EAAP,KAAauB,EAAb,KACA,EAAsC7C,IAAM4C,SAAS,IAArD,mBAAOE,EAAP,KAAoBC,EAApB,KA2BA,OAxBA/C,IAAMgD,WAAU,WACdH,EAAQrC,EAAYc,MACpByB,EAAevC,EAAYsB,SAC1B,CAACtB,EAAab,EAAM0C,SAsBrB,eAAC,EAAD,CAAeC,MAAM,4HAAwBhB,KAAK,eACnCe,OAAQ1C,EAAM0C,OACdK,QAAS/C,EAAM+C,QACfH,SAtBjB,SAAsBU,GACpBA,EAAEC,iBACFvD,EAAMwD,aAAa,CACjB7B,OACAQ,MAAOgB,KAmBMd,UAAWrC,EAAMqC,UACjBS,WAAW,yDAL1B,UAMI,uBAAOW,GAAG,kBAAkBxD,UAAU,qCAC/B4B,KAAK,OAAOF,KAAK,OAAO+B,UAAQ,EAACC,UAAU,IAAIC,UAAU,KACzDC,YAAY,8FACZC,MAAOnC,GAAQ,GAAIoC,SAnBhC,SAA0BT,GACxBJ,EAAQI,EAAEU,OAAOF,UAmBb,sBAAM7D,UAAU,4CAChB,uBAAOwD,GAAG,oBAAoBxD,UAAU,4CACjC4B,KAAK,OAAOF,KAAK,cAAc+B,UAAQ,EAACC,UAAU,IAAIC,UAAU,MAChEC,YAAY,+IACZC,MAAOX,GAAe,GAAIY,SAnBvC,SAAiCT,GAC/BF,EAAeE,EAAEU,OAAOF,UAmBpB,sBAAM7D,UAAU,kDCbTgE,MArCf,SAAyBjE,GAEvB,MAA4BK,IAAM4C,SAAS,IAA3C,mBAAeiB,GAAf,WACMC,EAAiB9D,IAAM+D,SAkB7B,OAJA/D,IAAMgD,WAAU,WACdc,EAAeE,QAAQP,MAAQ,KAC9B,CAAC9D,EAAM0C,SAGR,eAAC,EAAD,CAAeC,MAAM,wFAAkBhB,KAAK,gBAC7Be,OAAQ1C,EAAM0C,OACdK,QAAS/C,EAAM+C,QACfH,SAnBjB,SAAsBU,GACpBA,EAAEC,iBACFvD,EAAMsE,eAAe,CAAEtC,OAAQmC,EAAeE,QAAQP,SAkBvCzB,UAAWrC,EAAMqC,UACjBS,WAAW,yDAL1B,UAME,uBAAOW,GAAG,mBAAmBxD,UAAU,qCAChC4B,KAAK,MAAMF,KAAK,OAAO+B,UAAQ,EAC/BG,YAAY,qGACZU,IAAKJ,EAAgBJ,SAnBhC,WACEG,EAAUC,EAAeE,QAAQP,UAmB/B,sBAAM7D,UAAU,iDCmBPuE,MAnDf,SAAuBxE,GAErB,MAAwBK,IAAM4C,SAAS,IAAvC,mBAAOtB,EAAP,KAAauB,EAAb,KACA,EAAwB7C,IAAM4C,SAAS,IAAvC,mBAAOxB,EAAP,KAAagD,EAAb,KA2BA,OAfApE,IAAMgD,WAAU,WACdH,EAAQ,IACRuB,EAAQ,MACP,CAACzE,EAAM0C,SAaR,eAAC,EAAD,CAAeC,MAAM,gEAAchB,KAAK,gBACzBe,OAAQ1C,EAAM0C,OACdK,QAAS/C,EAAM+C,QACfH,SA5BjB,SAAsBU,GACpBA,EAAEC,iBACFvD,EAAMoC,WAAW,CACfT,OACAF,UAyBaY,UAAWrC,EAAMqC,UACjBS,WAAW,6CAL1B,UAME,uBAAOW,GAAG,qBAAqBxD,UAAU,sCAClC4B,KAAK,OAAOF,KAAK,OAAO+B,UAAQ,EAACC,UAAU,IAAIC,UAAU,KACzDC,YAAY,mDACZC,MAAOnC,GAAQ,GAAIoC,SAnB9B,SAA0BT,GACxBJ,EAAQI,EAAEU,OAAOF,UAmBf,sBAAM7D,UAAU,gDAChB,uBAAOwD,GAAG,kBAAkBxD,UAAU,sCAC/B4B,KAAK,MAAMF,KAAK,OAAO+B,UAAQ,EAC/BG,YAAY,qGACZC,MAAOrC,GAAQ,GAAIsC,SAnB9B,SAA0BT,GACxBmB,EAAQnB,EAAEU,OAAOF,UAmBf,sBAAM7D,UAAU,iDC3BPyE,MAnBf,SAA2B1E,GAQzB,OACE,cAAC,EAAD,CAAe2C,MAAM,2DAAchB,KAAK,eACzBe,OAAQ1C,EAAM0C,OACdK,QAAS/C,EAAM+C,QACfH,SATjB,SAAsBU,GACpBA,EAAEC,iBACFvD,EAAMY,eAAeZ,EAAMW,OAQZ0B,UAAWrC,EAAMqC,UACjBS,WAAW,kBCKf6B,MApBf,SAAqB3E,GAEnB,OACE,qBAAKC,UAAS,oDACsC,IAAnC2E,OAAOC,KAAK7E,EAAMW,MAAMmB,QAAiB,gBAD1D,SAEE,sBAAK7B,UAAU,mBAAf,UACE,yBAAQA,UAAU,yBAAlB,UACE,qBAAKA,UAAU,eACXuB,IAAKxB,EAAMW,KAAKc,KAChBC,IAAK1B,EAAMW,KAAKgC,QACpB,4BAAY1C,UAAU,qBAAtB,SAA4CD,EAAMW,KAAKgB,UAEzD,wBAAQ1B,UAAU,oBACV4B,KAAK,SACLD,QAAS5B,EAAM+C,gBCehB+B,MA7Bf,SAA2B9E,GACzB,IAAQ2C,EAAsB3C,EAAtB2C,MAAOoC,EAAe/E,EAAf+E,WAOf,OACE,sBAAK9E,UAAU,4BAAf,UACE,oBAAIA,UAAU,iBAAd,SAAgC0C,IAChC,uBAAM1C,UAAU,OAAO2C,SAR3B,SAAsBU,GACpBA,EAAEC,iBACFvD,EAAM4C,YAMJ,UACE,uBAAOa,GAAG,cAAcxD,UAAU,qCAC3B4B,KAAK,QAAQF,KAAK,QAAQ+B,UAAQ,EAClCG,YAAY,UACnB,sBAAM5D,UAAU,4CAChB,uBAAOwD,GAAG,iBAAiBxD,UAAU,qCAC9B4B,KAAK,WAAWF,KAAK,WAAW+B,UAAQ,EAACC,UAAU,IAAIC,UAAU,MACjEC,YAAY,yCACnB,sBAAM5D,UAAU,8CAChB,wBAAQA,UAAU,uCAAuC4B,KAAK,SAA9D,SACGkD,OAGJ/E,EAAM6C,aCVEmC,MAZf,SAAkBhF,GAGhB,OACE,cAAC,EAAD,CAAmB2C,MAAM,qEAAcoC,WAAW,+GAAqBnC,SAAU5C,EAAM4C,SAAvF,SACE,cAAC,IAAD,CAAMzC,GAAG,WAAWF,UAAU,uBAA9B,oKCESgF,MARf,SAAejF,GAGb,OACE,cAAC,EAAD,CAAmB2C,MAAM,2BAAOoC,WAAW,oCCchCG,MAnBf,SAAqBlF,GAEnB,OACE,qBAAKC,UAAS,2BAAsBD,EAAM2B,KAA5B,+BACE3B,EAAM0C,QAAU,gBADhC,SAEE,sBAAKzC,UAAU,8CAAf,UACE,qBAAKA,UAAU,8BACf,mBAAGA,UAAU,wCAAb,mLAGA,wBAAQA,UAAU,oBACV4B,KAAK,SACLD,QAAS5B,EAAM+C,gB,gBC0FhBoC,EADH,I,WAlGV,WAAYC,EAAQC,EAAOC,GAAU,oBACnCC,KAAKC,QAAUJ,EACfG,KAAKE,OAASJ,EACdE,KAAKG,SAAWJ,E,kDAGlB,SAAeK,GACb,OAAIA,EAAIC,GACCD,EAAIE,OAENC,QAAQC,OAAR,gDAA0BJ,EAAIK,W,mCAGvC,SAAsBC,EAAUC,GAC9B,OAAOC,MAAM,GAAD,OAAIZ,KAAKG,UAAT,OAAoBH,KAAKC,QAAzB,aAA6C,CACvDY,OAAQ,QACRC,QAAS,CACPC,cAAef,KAAKE,OACpB,eAAgB,oBAElBc,KAAMC,KAAKC,UAAU,CACnB9E,KAAMsE,EACN9D,MAAO+D,MAGRQ,KAAKnB,KAAKoB,kB,8BAGf,SAAiBlF,GACf,OAAO0E,MAAM,GAAD,OAAIZ,KAAKG,UAAT,OAAoBH,KAAKC,QAAzB,oBAAoD,CAC9DY,OAAQ,QACRC,QAAS,CACPC,cAAef,KAAKE,OACpB,eAAgB,oBAElBc,KAAMC,KAAKC,UAAU,CACnBzE,OAAQP,MAGTiF,KAAKnB,KAAKoB,kB,gCAGf,WACE,OAAOR,MAAM,GAAD,OAAIZ,KAAKG,UAAT,OAAoBH,KAAKC,QAAzB,aAA6C,CACvDa,QAAS,CACPC,cAAef,KAAKE,UAGrBiB,KAAKnB,KAAKoB,kB,sBAGf,WACE,OAAOR,MAAM,GAAD,OAAIZ,KAAKG,UAAT,OAAoBH,KAAKC,QAAzB,UAA0C,CACpDa,QAAS,CACPC,cAAef,KAAKE,UAGrBiB,KAAKnB,KAAKoB,kB,qBAGf,SAAQC,EAAUC,GAChB,OAAOV,MAAM,GAAD,OAAIZ,KAAKG,UAAT,OAAoBH,KAAKC,QAAzB,UAA0C,CACpDY,OAAQ,OACRC,QAAS,CACPC,cAAef,KAAKE,OACpB,eAAgB,oBAElBc,KAAMC,KAAKC,UAAU,CACnB9E,KAAMiF,EACNnF,KAAMoF,MAGPH,KAAKnB,KAAKoB,kB,kCAGf,SAAqBG,EAAQ3F,GAC3B,OAAOgF,MAAM,GAAD,OAAIZ,KAAKG,UAAT,OAAoBH,KAAKC,QAAzB,wBAAgDsB,GAAU,CACpEV,OAAQjF,EAAU,MAAQ,SAC1BkF,QAAS,CACPC,cAAef,KAAKE,OACpB,eAAgB,sBAGnBiB,KAAKnB,KAAKoB,kB,wBAGb,SAAWG,GACT,OAAOX,MAAM,GAAD,OAAIZ,KAAKG,UAAT,OAAoBH,KAAKC,QAAzB,kBAA0CsB,GAAU,CAChEV,OAAQ,SACRC,QAAS,CACLC,cAAef,KAAKE,UAGrBiB,KAAKnB,KAAKoB,oB,KAKL,CC5EG,YACD,uCACE,sCCwMDI,MAnNf,WAGE,MAAsC1G,IAAM4C,SAAS,IAArD,mBAAOpC,EAAP,KAAoBmG,EAApB,KAGA,EAAkC3G,IAAM4C,UAAS,GAAjD,mBAAOZ,EAAP,KAAkB4E,EAAlB,KAGA,EAAwB5G,IAAM4C,SAAS,IAAvC,mBAAOtC,EAAP,KAAauG,EAAb,KAEA,EAA4D7G,IAAM4C,UAAS,GAA3E,mBAAOkE,EAAP,KAA+BC,EAA/B,KACA,EAAsD/G,IAAM4C,UAAS,GAArE,mBAAOoE,EAAP,KAA4BC,EAA5B,KACA,EAA0DjH,IAAM4C,UAAS,GAAzE,mBAAOsE,EAAP,KAA8BC,EAA9B,KACA,EAA8DnH,IAAM4C,UAAS,GAA7E,mBAAOwE,EAAP,KAAgCC,EAAhC,KACA,EAAwErH,IAAM4C,UAAS,GAAvF,mBAAO0E,EAAP,KAAqCC,EAArC,KAEA,EAAwCvH,IAAM4C,SAAS,IAAvD,mBAAO4E,EAAP,KAAqBC,EAArB,KAGA,GAA0BzH,IAAM4C,SAAS,IAAzC,qBAAOX,GAAP,MAAcyF,GAAd,MA6BA,SAASC,GAAmBrH,GAC1BiH,GAAgC,GAIlC,SAASK,KACPb,GAA0B,GAC1BE,GAAuB,GACvBE,GAAyB,GACzBE,GAA2B,GAC3BE,GAAgC,GAChCE,EAAgB,IAkGlB,OA9FAzH,IAAMgD,WAAU,WACd4D,GAAa,GACbnB,QAAQoC,IAAI,CAAC/C,EAAIgD,qBAAsBhD,EAAIiD,aACxC1B,MAAK,SAAC2B,GACLrB,EAAeqB,EAAK,IACpBN,GAASM,EAAK,GAAG9F,KAAI,SAAC+F,GAAD,OAAWA,SAEjCC,OAAM,SAACC,GACNC,QAAQC,MAAMF,MAEfG,SAAQ,WACP1B,GAAa,QAEhB,IAkFD,qBAAKhH,UAAU,OAAf,SAEE,eAACG,EAAmBwI,SAApB,CAA6B9E,MAAOjD,EAApC,UAEE,sBAAKZ,UAAU,kBAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WAEI,cAAC,IAAD,CAAO4I,OAAK,EAACC,KAAK,IAAIC,QAClB,cAAC,EAAD,CAAM7G,cAjJtB,WACEkF,GAA0B,IAiJNhF,WA7ItB,WACEkF,GAAuB,IA6IHrF,aAzItB,WACEuF,GAAyB,IAyIL5G,eArItB,SAAiCD,GAC/BuG,EAAQvG,GACR+G,GAA2B,IAoIPjH,YAhItB,SAAyBE,GACvBmH,EAAgBnH,IAgII2B,MAAOA,GACP5B,WA3BtB,SAAwBC,GACtB,IAAMQ,EAAUR,EAAKS,MAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAEL,MAAQJ,EAAYI,OAC3DkE,EAAI6D,qBAAqBrI,EAAKM,KAAME,GACjCuF,MAAK,SAACuC,GACLlB,IAAS,SAACmB,GAAD,OAAWA,EAAM3G,KAAI,SAAC4G,GAAD,OAAOA,EAAElI,MAAQN,EAAKM,IAAMgI,EAAUE,WAErEZ,OAAM,SAACC,GACNC,QAAQC,MAAMF,OAqBEnG,UAAWA,MAGrB,cAAC,IAAD,CAAOyG,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,CAAUnG,SAAUoF,UAGvD,cAAC,EAAD,OAGF,cAAC,EAAD,CAAkBtF,OAAQyE,EAAwBpE,QAASkF,GACzCzE,aA1GxB,YAA4C,IAAhB7B,EAAe,EAAfA,KAAMQ,EAAS,EAATA,MAChC8E,GAAa,GACb9B,EAAIiE,sBAAsBzH,EAAMQ,GAC7BuE,MAAK,SAAC2B,GACLrB,EAAeqB,GACfJ,QAEDM,OAAM,SAACC,GACNC,QAAQC,MAAMF,MAEfG,SAAQ,WACP1B,GAAa,OAgGK5E,UAAWA,IAC7B,cAAC,EAAD,CAAiBK,OAAQ6E,EAAuBxE,QAASkF,GACxC3D,eA7FvB,YAAyC,IAAXtC,EAAU,EAAVA,OAC5BiF,GAAa,GACb9B,EAAIkE,iBAAiBrH,GAClB0E,MAAK,SAAC2B,GACLrB,EAAeqB,GACfJ,QAEDM,OAAM,SAACC,GACNC,QAAQC,MAAMF,MAEfG,SAAQ,WACP1B,GAAa,OAmFI5E,UAAWA,IAC5B,cAAC,EAAD,CAAeK,OAAQ2E,EAAqBtE,QAASkF,GACtC7F,WAhFrB,YAA+C,IAAfT,EAAc,EAAdA,KAAMF,EAAQ,EAARA,KACpCwF,GAAa,GACb9B,EAAImE,QAAQ3H,EAAMF,GACfiF,MAAK,SAACuC,GACLlB,GAAS,CAACkB,GAAF,mBAAc3G,MACtB2F,QAEDM,OAAM,SAACC,GACNC,QAAQC,MAAMF,MAEfG,SAAQ,WACP1B,GAAa,OAsEE5E,UAAWA,IAC1B,cAAC,EAAD,CAAmBK,OAAQ+E,EAAyB1E,QAASkF,GAClCrH,eAnEjC,SAAgCD,GAC9BsG,GAAa,GACb9B,EAAIoE,WAAW5I,EAAKM,KACjByF,MAAK,SAAC2B,GACLN,IAAS,SAACmB,GAAD,OAAWA,EAAMM,QAAO,SAACL,GAChC,OAAQA,EAAElI,MAAQN,EAAKM,UAEzBgH,QAEDM,OAAM,SAACC,GACNC,QAAQC,MAAMF,MAEfG,SAAQ,WACP1B,GAAa,OAuDc5E,UAAWA,EACX1B,KAAMA,IACjC,cAAC,EAAD,CAAYA,KAAMkH,EAAc9E,QAASkF,KAEzC,cAAC,EAAD,CAAavF,OAAQiF,EACRhG,KAAK,gBACLoB,QAASkF,GACT3D,eAAgB0D,WCjNtByB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjD,MAAK,YAAkD,IAA/CkD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.978f0652.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Header(props) {\n  //const { textLink } = props;\n\n  return (\n    <header className=\"header\">\n      <a href=\"#\" className=\"header__logo\"></a>\n      <Link to=\"/sign-in\" className=\"link header__link\">\n        Войти\n      </Link>\n    </header>\n  );\n}\n\nexport default Header;","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();","import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nconst Card = React.memo(({ onCardClick, onCardLike, card, onConfirmation }) => {\n\n    /** Подписка на контекст CurrentUserContext */\n    const currentUser = React.useContext(CurrentUserContext);\n\n    /** Определяет, является ли пользователь владельцем текущей карточки */\n    const isOwn = card.owner._id === currentUser._id;\n\n    /** Содержит классы для кнопки удаления карточки  */\n    const cardDeleteButtonClassName = (\n      `card__trash ${isOwn ? '' : 'card__trash_disable'}`\n    );\n\n    /** Определяет, ставил ли пользователь лайк для текущей карточки */\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    /** Содержит классы для кнопки лайк */\n    const cardLikeButtonClassName = (\n      `card__icon-like ${isLiked ? 'card__icon-like_active' : ''}`\n    );\n    \n    /** Событие при клике на изображение карточки */\n    function handleClick() {\n      onCardClick(card);\n    }\n\n    /** Событие при клике на кнопку \"лайк\" */\n    function handleLikeClick() {\n      onCardLike(card);\n    }\n\n    /** Событие при клике на кнопку \"удалить\" (Открывает окно подтверждения) */\n    function handleDeleteClick() {\n      onConfirmation(card);\n    }\n\n    return (\n      <li className=\"card\">\n        <img className=\"card__image\"\n            src={card.link}\n            alt={card.name} \n            onClick={handleClick}/>\n        <h2 className=\"card__name\">{card.name}</h2>\n        <div className=\"card__like-container\">\n          <button className={cardLikeButtonClassName}\n                  type=\"button\"\n                  onClick={handleLikeClick}></button>\n          <span className=\"card__like-counter\">{card.likes.length}</span>\n        </div>\n        <button className={cardDeleteButtonClassName}\n                type=\"button\"\n                onClick={handleDeleteClick}></button>\n      </li>\n    );\n  }\n); \n\nexport default Card;","import React from 'react';\nimport Card from './Card'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Main(props) {\n\n  /** Подписка на контекст CurrentUserContext */\n  const currentUser = React.useContext(CurrentUserContext);\n\n  return (\n    <main className=\"content page__content\">\n      <section className=\"profile\">\n        <div className=\"profile__avatar-container\">\n          <img className=\"profile__avatar\"\n               src={currentUser.avatar}\n               alt=\"Аватарка пользователя.\" />\n          <button className=\"profile__edit-avatar\"\n                  onClick={props.onEditAvatar}></button>\n        </div>\n        <div className=\"profile__info\">\n          <h1 className=\"profile__name\">{currentUser.name}</h1>\n          <button className=\"profile__edit-button\" type=\"button\"\n                  onClick={props.onEditProfile}></button>\n          <p className=\"profile__description\">{currentUser.about}</p>\n        </div>\n        <button className=\"profile__add-button\" type=\"button\"\n                onClick={props.onAddPlace}></button>\n      </section>\n\n      <section className=\"places content__places\">\n        <ul className=\"cards\">\n          { \n            props.isLoading ? \n            \"\" :\n            props.cards.map(({...card }) => (\n                <Card onCardClick={props.onCardClick}\n                      key={card._id}\n                      card={{...card}}\n                      onConfirmation={props.onConfirmation}\n                      onCardLike={props.onCardLike} >\n                </Card>\n              ) \n            )\n          }\n        </ul>\n      </section>\n    </main>\n  );\n}\n\nexport default Main;","import React from \"react\";\n\nfunction Footer () {\n  return (\n    <footer className=\"footer page__footer\">\n      <p className=\"footer__copyright\">&copy; 2021. Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\n\nfunction PopupWithForm (props) {\n\n  return (\n    <div className={`popup popup_type_${props.name}\n                  ${props.isOpen && \"popup_opened\"}`}>\n      <div className=\"popup__container popup__container_type_form\">\n        <h2 className=\"popup__title\">{props.title}</h2>\n        <form className=\"form\" name={`form-${props.name}`} onSubmit={props.onSubmit}>\n          {props.children}\n          <button className=\"form__button\" type=\"submit\">\n            {props.isLoading ? `${props.buttonText}...` : `${props.buttonText}`}\n          </button>\n        </form>\n        <button className=\"popup__icon-close\"\n                type=\"button\"\n                onClick={props.onClose}>\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default PopupWithForm;","import React from \"react\";\nimport PopupWithForm from './PopupWithForm'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup(props) {\n\n  /** Текущий пользователь */\n  const currentUser = React.useContext(CurrentUserContext);\n\n  const [name, SetName] = React.useState('');\n  const [description, SetDescription] = React.useState('');\n\n  /** Записывает информацию о пользователе в стейт-переменные */\n  React.useEffect(() => {\n    SetName(currentUser.name);\n    SetDescription(currentUser.about);\n  }, [currentUser, props.isOpen]); \n\n  /** Отправляет запрос к api. Обновляет информацию о пользователе */\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onUpdateUser({\n      name,\n      about: description,\n    });\n  }\n  \n  /** Записывает имя пользователя в стейт-переменную */\n  function handleChangeName(e) {\n    SetName(e.target.value);\n  }\n\n  /** Записывает описание пользователя в стейт-переменную */\n  function handleChangeDescription(e) {\n    SetDescription(e.target.value);\n  }\n\n  return (\n    <PopupWithForm title=\"Редактировать профиль\" name=\"edit-profile\" \n                   isOpen={props.isOpen}\n                   onClose={props.onClose}\n                   onSubmit={handleSubmit}\n                   isLoading={props.isLoading}\n                   buttonText=\"Сохранить\" >\n        <input id=\"name-user-input\" className=\"form__input popup__input_type_name\"\n               type=\"text\" name=\"name\" required minLength=\"2\" maxLength=\"40\"\n               placeholder=\"Имя пользователя\"\n               value={name || ''} onChange={handleChangeName} />\n        <span className=\"form__input-error name-user-input-error\"></span>\n        <input id=\"description-input\" className=\"form__input popup__input_type_description\"\n               type=\"text\" name=\"description\" required minLength=\"2\" maxLength=\"200\"\n               placeholder=\"Информация о пользователе\"\n               value={description || ''} onChange={handleChangeDescription} />\n        <span className=\"form__input-error description-input-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;","import React from \"react\";\nimport PopupWithForm from './PopupWithForm'\n\nfunction EditAvatarPopup(props) {\n\n  const [avatar, SetAvatar] = React.useState('');\n  const inputAvatarRef = React.useRef();\n\n  /** Отправляет запрос к api. Обновляет аватар пользователя */\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onUpdateAvatar({ avatar: inputAvatarRef.current.value });\n  }\n\n  /** Записывает ссылку на аватарку в стейт-переменную */\n  function handleChange() {\n    SetAvatar(inputAvatarRef.current.value);\n  }\n\n  /** Очищает поле ввода формы обновления аватарки пользователя */\n  React.useEffect(() => {\n    inputAvatarRef.current.value = '';\n  }, [props.isOpen]); \n\n  return (\n    <PopupWithForm title=\"Обновить аватар\" name=\"update-avatar\"\n                   isOpen={props.isOpen}\n                   onClose={props.onClose}\n                   onSubmit={handleSubmit}\n                   isLoading={props.isLoading}\n                   buttonText=\"Сохранить\" >\n      <input id=\"url-input-avatar\" className=\"form__input popup__input_type_link\"\n             type=\"url\" name=\"link\" required\n             placeholder=\"Ссылка на картинку\"\n             ref={inputAvatarRef} onChange={handleChange} />\n      <span className=\"form__input-error url-input-avatar-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup;","import React from \"react\";\nimport PopupWithForm from './PopupWithForm'\n\nfunction AddPlacePopup(props) {\n\n  const [name, SetName] = React.useState('');\n  const [link, SetLink] = React.useState('');\n\n  /** Отправляет запрос к api. Добавляет новую карточку */\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onAddPlace({\n      name,\n      link\n    });\n  }\n\n  /** Очищает поля ввода формы добавления новой карточки */\n  React.useEffect(() => {\n    SetName('');\n    SetLink('');\n  }, [props.isOpen]); \n\n  /** Записывает название карточки в стейт-переменную */\n  function handleChangeName(e) {\n    SetName(e.target.value);\n  }\n\n  /** Записывает ссылку на карточку в стейт-переменную */\n  function handleChangeLink(e) {\n    SetLink(e.target.value);\n  }\n\n  return (\n    <PopupWithForm title=\"Новое место\" name=\"add-new-place\"\n                   isOpen={props.isOpen}\n                   onClose={props.onClose}\n                   onSubmit={handleSubmit}\n                   isLoading={props.isLoading} \n                   buttonText=\"Создать\" >\n      <input id=\"name-picture-input\" className=\"popup__input popup__input_type_name\"\n             type=\"text\" name=\"name\" required minLength=\"2\" maxLength=\"30\"\n             placeholder=\"Название\"\n             value={name || ''} onChange={handleChangeName} />\n      <span className=\"popup__input-error name-picture-input-error\"></span>\n      <input id=\"url-input-place\" className=\"popup__input popup__input_type_link\"\n             type=\"url\" name=\"link\" required\n             placeholder=\"Ссылка на картинку\"\n             value={link || ''} onChange={handleChangeLink} />\n      <span className=\"popup__input-error url-input-place-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default AddPlacePopup;","import React from \"react\";\nimport PopupWithForm from './PopupWithForm'\n\nfunction ConfirmationPopup(props) {\n\n  /** Отправляет запрос к api. Удаляет карточку */\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onConfirmation(props.card);\n  }\n\n  return (\n    <PopupWithForm title=\"Вы уверены?\" name=\"confirmation\"\n                   isOpen={props.isOpen}\n                   onClose={props.onClose}\n                   onSubmit={handleSubmit}\n                   isLoading={props.isLoading}\n                   buttonText=\"Да\" >\n    </PopupWithForm>\n  );\n}\n\nexport default ConfirmationPopup;","import React from \"react\";\n\nfunction ImagePopup (props) {\n  \n  return (\n    <div className={`popup popup_type_image\n                  ${(Object.keys(props.card).length !== 0) && \"popup_opened\"}`}>\n      <div className=\"popup__container\">\n        <figure className=\"popup__container-image\">\n          <img className=\"popup__image\"\n              src={props.card.link}\n              alt={props.card.title} />\n          <figcaption className=\"popup__image-title\">{props.card.name}</figcaption>\n        </figure>\n        <button className=\"popup__icon-close\"\n                type=\"button\"\n                onClick={props.onClose}></button>\n      </div>\n    </div>\n  );\n}\n\nexport default ImagePopup;","import React from 'react';\n\nfunction LoginRegisterForm(props) {\n  const { title, textButton } = props;\n  \n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onSubmit();\n  }\n\n  return (\n    <div className=\"content content_type_form\">\n      <h2 className=\"content__title\">{title}</h2>\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <input id=\"email-input\" className=\"form__input form__input_type_black\"\n               type=\"email\" name=\"email\" required\n               placeholder=\"Email\" />\n        <span className=\"form__input-error name-user-input-error\"></span>\n        <input id=\"password-input\" className=\"form__input form__input_type_black\"\n               type=\"password\" name=\"password\" required minLength=\"2\" maxLength=\"200\"\n               placeholder=\"Пароль\" />\n        <span className=\"form__input-error description-input-error\"></span>\n        <button className=\"form__button form__button_type_white\" type=\"submit\">\n          {textButton}\n        </button>\n      </form>\n      {props.children}\n    </div>\n  );\n}\n\nexport default LoginRegisterForm;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport LoginRegisterForm from './LoginRegisterForm';\n\nfunction Register(props) {\n\n\n  return (\n    <LoginRegisterForm title=\"Регистрация\" textButton=\"Зарегистрироваться\" onSubmit={props.onSubmit} >\n      <Link to=\"/sign-in\" className=\"link link_type_small\">\n        Уже зарегистрированы? Войти\n      </Link>\n    </LoginRegisterForm>\n  );\n}\n\nexport default Register;","import React from 'react';\nimport LoginRegisterForm from './LoginRegisterForm';\n\nfunction Login(props) {\n\n\n  return (\n    <LoginRegisterForm title=\"Вход\" textButton=\"Войти\" />\n  );\n}\n\nexport default Login;","import React from \"react\";\n\nfunction InfoToolTip(props) {\n  \n  return (\n    <div className={`popup popup_type_${props.name}\n                  ${props.isOpen && \"popup_opened\"}`}>\n      <div className=\"popup__container popup__container_type_form\">\n        <div className=\"popup__image_type_success\"></div>\n        <p className=\"popup__title popup__title_type_center\">\n          Вы успешно зарегистрировались!\n        </p>\n        <button className=\"popup__icon-close\"\n                type=\"button\"\n                onClick={props.onClose}>\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default InfoToolTip;","import { cohort } from './constants.js';\nimport { token } from './constants.js'\nimport { baseUrl } from './constants.js'\n\nclass Api {\n  constructor(cohort, token, baseUrl) {\n    this._cohort = cohort;\n    this._token = token;\n    this._baseUrl = baseUrl;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n}\n\n  updateUserInformation(nameUser, aboutUser) {\n    return fetch(`${this._baseUrl}${this._cohort}/users/me`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: nameUser,\n        about: aboutUser\n      })\n    })\n      .then(this._checkResponse)\n  }\n\n  updateUserAvatar(link) {\n    return fetch(`${this._baseUrl}${this._cohort}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        avatar: link,\n      })\n    })\n      .then(this._checkResponse)\n  }\n\n  getUserInformation() {\n    return fetch(`${this._baseUrl}${this._cohort}/users/me`, {\n      headers: {\n        authorization: this._token\n      }\n    })\n      .then(this._checkResponse)\n  }\n\n  getCards() {\n    return fetch(`${this._baseUrl}${this._cohort}/cards`, {\n      headers: {\n        authorization: this._token\n      }\n    })\n      .then(this._checkResponse)\n  }\n\n  addCard(nameCard, linkCard) {\n    return fetch(`${this._baseUrl}${this._cohort}/cards`, {\n      method: 'POST',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: nameCard,\n        link: linkCard\n      })\n    })\n      .then(this._checkResponse)\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    return fetch(`${this._baseUrl}${this._cohort}/cards/likes/${cardId}`, {\n      method: isLiked ? 'PUT' : 'DELETE',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(this._checkResponse)\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}${this._cohort}/cards/${cardId}`, {\n    method: 'DELETE',\n    headers: {\n        authorization: this._token\n      }\n    })\n      .then(this._checkResponse)\n  }\n\n}\n\nconst api = new Api(cohort, token, baseUrl);\nexport default api;","/* Объект элементов формы. */\n// const validateConfig = {\n//   formSelector: '.popup__form',\n//   inputSelector: '.popup__input',\n//   submitButtonSelector: '.popup__button',\n//   inactiveButtonClass: 'popup__button_inactive',\n//   inputErrorClass: 'popup__input_type_error',\n//   errorClass: 'popup__input-error_active'\n// };\n\n/* Элементы profile. */\n// const buttonEditAvatar = document.querySelector('.profile__edit-avatar');\n// const buttonEditProfile = document.querySelector('.profile__edit-button');\n// const buttonAddNewPlace = document.querySelector('.profile__add-button');\n\n/* Элементы popup_type_update-avatar. */\n// const popupTypeUpdateAvatar = document.querySelector('.popup_type_update-avatar');\n\n/* Элементы popup_type_edit-profile. */\n// const popupTypeEditProfile = document.querySelector('.popup_type_edit-profile');\n// const popupInputNameProfile = popupTypeEditProfile.querySelector('.popup__input_type_name');\n// const popupInputDescription = popupTypeEditProfile.querySelector('.popup__input_type_description');\n\n/* Элементы popup_type_add-new-place. */\n// const popupTypeAddNewPlace = document.querySelector('.popup_type_add-new-place');\n\n/* Данные для api проекта \"mesto\" */\nconst cohort = 'cohort-28';\nconst token = 'b5931bc5-3874-4455-9cea-b058f66f7d9b';\nconst baseUrl = 'https://mesto.nomoreparties.co/v1/'\n\n/* Текст кнопок модальных окон, при отправке запросов */\n// const textSave = \"Сохранить\";\n// const textSaveLoading = \"Сохранить...\";\n// const textCreate = \"Создать\";\n// const textCreateLoading = \"Создать...\"\n\nexport {\n  // validateConfig,\n  // buttonEditAvatar,\n  // buttonEditProfile,\n  // buttonAddNewPlace,\n  // popupInputNameProfile,\n  // popupInputDescription,\n  // popupTypeUpdateAvatar,\n  // popupTypeEditProfile,\n  // popupTypeAddNewPlace,\n  cohort,\n  token,\n  baseUrl,\n  // textSave,\n  // textSaveLoading,\n  // textCreate,\n  // textCreateLoading\n};\n","import React from 'react';\nimport { Routes, Route } from 'react-router';\nimport Header from './Header'\nimport Main from './Main'\nimport Footer from './Footer'\nimport EditProfilePopup from './EditProfilePopup'\nimport EditAvatarPopup from './EditAvatarPopup'\nimport AddPlacePopup from './AddPlacePopup'\nimport ConfirmationPopup from './ConfirmationPopup'\nimport ImagePopup from './ImagePopup'\nimport Register from './Register';\nimport Login from './Login';\nimport InfoToolTip from './InfoToolTip';\nimport api from '../utils/Api'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nimport '../index.css';\n\nfunction App() {\n\n  /** Текущий пользователь */\n  const [currentUser, SetCurrentUser] = React.useState({});\n\n  /** Состояние загрузки */\n  const [isLoading, SetIsLoading] = React.useState(false);\n\n  /** Карточка (Для удаления) */\n  const [card, SetCard] = React.useState({});\n\n  const [isEditProfilePopupOpen, SetIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, SetIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, SetIsEditAvatarPopupOpen] = React.useState(false);\n  const [isConfirmationPopupOpen, SetIsConfirmationPopupOpen] = React.useState(false);\n  const [isRegistationResultPopupOpen, SetIsRegistationResultPopupOpen] = React.useState(false);\n\n  const [selectedCard, SetSelectedCard] = React.useState({});\n\n  /** Массив загруженных карточек */\n  const [cards, SetCards] = React.useState([]);\n\n  /** Открывает окно редактирования профиля */\n  function handleEditProfileClick() {\n    SetIsEditProfilePopupOpen(true);\n  }\n\n  /** Открывает окно добавления новой карточки */\n  function handleAddPlaceClick() {\n    SetIsAddPlacePopupOpen(true);\n  }\n\n  /** Открывает окно обновления аватарки */\n  function handleEditAvatarClick() {\n    SetIsEditAvatarPopupOpen(true);\n  }\n\n  /** Открывает окно подтверждения */\n  function handleConfirmationClick(card) {\n    SetCard(card);\n    SetIsConfirmationPopupOpen(true);\n  }\n\n  /** Открывает окно с увеличенным изображением */\n  function handleCardClick(card) {\n    SetSelectedCard(card);\n  }\n\n  /** Открывает окно с результатом регистрации */\n  function handleRegistration(card) {\n    SetIsRegistationResultPopupOpen(true);\n  }\n\n  /** Закрывает все модальные окна */\n  function closeAllPopups() {\n    SetIsEditProfilePopupOpen(false);\n    SetIsAddPlacePopupOpen(false);\n    SetIsEditAvatarPopupOpen(false);\n    SetIsConfirmationPopupOpen(false);\n    SetIsRegistationResultPopupOpen(false);\n    SetSelectedCard({});\n  }\n\n  /** Запрашивает карточки и информацию о пользователе при загрузке страницы */\n  React.useEffect(() => {\n    SetIsLoading(true);\n    Promise.all([api.getUserInformation(), api.getCards()])\n      .then((data) => {\n        SetCurrentUser(data[0]);\n        SetCards(data[1].map((item) => (item)));\n      })\n      .catch((err) => {\n        console.error(err);\n      })\n      .finally(() => {\n        SetIsLoading(false);\n      });\n  }, [] );\n\n  /** Обновляет информацию о пользователе */\n  function handleUpdateUser({ name, about }) {\n    SetIsLoading(true);\n    api.updateUserInformation(name, about)\n      .then((data) => {\n        SetCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.error(err);\n      })\n      .finally(() => {\n        SetIsLoading(false);\n      });\n  }\n\n  /** Обновляет аватарку пользователя */\n  function handleUpdateAvatar({ avatar }) {\n    SetIsLoading(true);\n    api.updateUserAvatar(avatar)\n      .then((data) => {\n        SetCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.error(err);\n      })\n      .finally(() => {\n        SetIsLoading(false);\n      });\n  }\n\n  /** Добавляет новую карточку */\n  function handleAddPlaceSubmit({ name, link }) {\n    SetIsLoading(true);\n    api.addCard(name, link)\n      .then((newCard) => {\n        SetCards([newCard, ...cards]); \n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.error(err);\n      })\n      .finally(() => {\n        SetIsLoading(false);\n      });\n  }\n\n  /** Удаляет карточку  */\n  function handleCardDeleteSubmit(card) {\n    SetIsLoading(true);\n    api.deleteCard(card._id)\n      .then((data) => {\n        SetCards((state) => state.filter((c) => {\n          return (c._id !== card._id) //Возвращает все карточки кроме той которую удалили\n        }));\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.error(err);\n      })\n      .finally(() => {\n        SetIsLoading(false);\n      });\n  }\n\n  /** Определяет, ставил ли пользователь лайк для текущей карточки\n  *   Ставит/удаляет лайк   */\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        SetCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n      })\n      .catch((err) => {\n        console.error(err);\n      })\n  } \n\n  return (\n    <div className=\"root\">\n\n      <CurrentUserContext.Provider value={currentUser}>\n\n        <div className=\"page root__page\">\n          <Header />\n          <Routes>\n            \n              <Route exact path=\"/\" element={\n                  <Main onEditProfile={handleEditProfileClick}\n                        onAddPlace={handleAddPlaceClick}\n                        onEditAvatar={handleEditAvatarClick}\n                        onConfirmation={handleConfirmationClick}\n                        onCardClick={handleCardClick}\n                        cards={cards}\n                        onCardLike={handleCardLike}\n                        isLoading={isLoading} />\n                }\n              />\n              <Route path=\"sign-in\" element={<Login />} />\n              <Route path=\"sign-up\" element={<Register onSubmit={handleRegistration} />} />\n            \n          </Routes>\n          <Footer />\n        </div>\n        \n        <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups}\n                          onUpdateUser={handleUpdateUser}\n                          isLoading={isLoading} />\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}\n                         onUpdateAvatar={handleUpdateAvatar}\n                         isLoading={isLoading} /> \n        <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}\n                       onAddPlace={handleAddPlaceSubmit}\n                       isLoading={isLoading} />\n        <ConfirmationPopup isOpen={isConfirmationPopupOpen} onClose={closeAllPopups}\n                                   onConfirmation={handleCardDeleteSubmit}\n                                   isLoading={isLoading}\n                                   card={card} />\n        <ImagePopup card={selectedCard} onClose={closeAllPopups}/>\n\n        <InfoToolTip isOpen={isRegistationResultPopupOpen}\n                     name=\"info-tool-tip\"\n                     onClose={closeAllPopups} \n                     onUpdateAvatar={handleRegistration} />\n\n      </CurrentUserContext.Provider>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}