{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ConfirmationPopup.js","components/ImagePopup.js","components/LoginRegisterForm.js","utils/Auth.js","utils/constants.js","components/Register.js","components/Login.js","components/InfoToolTip.js","utils/Api.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","props","linkName","linkRoute","className","to","isLoggedIn","userEmail","onClick","signOut","CurrentUserContext","React","createContext","Card","memo","onCardClick","onCardLike","card","onConfirmation","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","src","link","alt","name","type","length","Main","onPage","avatar","onEditAvatar","onEditProfile","about","onAddPlace","isLoading","cards","map","Footer","PopupWithForm","isOpen","title","onSubmit","children","buttonText","onClose","EditProfilePopup","useState","SetName","description","SetDescription","useEffect","e","preventDefault","onUpdateUser","id","required","minLength","maxLength","placeholder","value","onChange","target","EditAvatarPopup","SetAvatar","inputAvatarRef","useRef","current","onUpdateAvatar","ref","AddPlacePopup","SetLink","ConfirmationPopup","ImagePopup","Object","keys","LoginRegisterForm","textButton","password","SetPassword","email","SetEmail","auth","baseUrlAuth","this","_baseUrlAuth","fetch","method","headers","body","JSON","stringify","then","res","ok","json","Promise","reject","status","jwt","Register","navigate","useNavigate","register","data","console","log","onRegister","catch","err","error","Login","authorization","onLogin","SetUserEmail","localStorage","setItem","token","InfoToolTip","isRegistrationSuccsses","popupImageClassName","api","cohort","baseUrl","_cohort","_token","_baseUrl","nameUser","aboutUser","_checkResponse","nameCard","linkCard","cardId","App","SetLinkName","SetLinkRoute","route","SetCurrentUser","SetIsLoading","SetIsRegistrationSuccsses","loggedIn","SetLoggedIn","SetCard","isEditProfilePopupOpen","SetIsEditProfilePopupOpen","isAddPlacePopupOpen","SetIsAddPlacePopupOpen","isEditAvatarPopupOpen","SetIsEditAvatarPopupOpen","isConfirmationPopupOpen","SetIsConfirmationPopupOpen","isRegistationResultPopupOpen","SetIsRegistationResultPopupOpen","selectedCard","SetSelectedCard","SetCards","tokenCheck","getItem","checkToken","handleRegistration","isSuccsses","closeAllPopups","all","getUserInformation","getCards","item","finally","Provider","removeItem","path","element","exact","changeLikeCardStatus","newCard","state","c","updateUserInformation","updateUserAvatar","addCard","deleteCard","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b55949d0.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Header(props) {\n\n  const { linkName, linkRoute } = props;\n\n  function SignOut() {\n    props.signOut();\n  }\n\n  return (\n    <header className=\"header\">\n      <Link to=\"/\" className=\"header__logo\"></Link>\n      <div className=\"header__container\">\n        <p className=\"header__email\">{ props.isLoggedIn && props.userEmail }</p>\n        <Link to={linkRoute} className=\"link header__link\" onClick={SignOut}>\n          {linkName}\n        </Link>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();","import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nconst Card = React.memo(({ onCardClick, onCardLike, card, onConfirmation }) => {\n\n    /** Подписка на контекст CurrentUserContext */\n    const currentUser = React.useContext(CurrentUserContext);\n\n    /** Определяет, является ли пользователь владельцем текущей карточки */\n    const isOwn = card.owner._id === currentUser._id;\n\n    /** Содержит классы для кнопки удаления карточки  */\n    const cardDeleteButtonClassName = (\n      `card__trash ${isOwn ? '' : 'card__trash_disable'}`\n    );\n\n    /** Определяет, ставил ли пользователь лайк для текущей карточки */\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    /** Содержит классы для кнопки лайк */\n    const cardLikeButtonClassName = (\n      `card__icon-like ${isLiked ? 'card__icon-like_active' : ''}`\n    );\n    \n    /** Событие при клике на изображение карточки */\n    function handleClick() {\n      onCardClick(card);\n    }\n\n    /** Событие при клике на кнопку \"лайк\" */\n    function handleLikeClick() {\n      onCardLike(card);\n    }\n\n    /** Событие при клике на кнопку \"удалить\" (Открывает окно подтверждения) */\n    function handleDeleteClick() {\n      onConfirmation(card);\n    }\n\n    return (\n      <li className=\"card\">\n        <img className=\"card__image\"\n            src={card.link}\n            alt={card.name} \n            onClick={handleClick}/>\n        <h2 className=\"card__name\">{card.name}</h2>\n        <div className=\"card__like-container\">\n          <button className={cardLikeButtonClassName}\n                  type=\"button\"\n                  onClick={handleLikeClick}></button>\n          <span className=\"card__like-counter\">{card.likes.length}</span>\n        </div>\n        <button className={cardDeleteButtonClassName}\n                type=\"button\"\n                onClick={handleDeleteClick}></button>\n      </li>\n    );\n  }\n); \n\nexport default Card;","import React from 'react';\nimport Card from './Card'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Main(props) {\n\n  /** Записывает имя и адрес ссылки в стейт-переменные */\n  props.onPage(\"Выйти\", \"/sign-in\");\n\n  /** Подписка на контекст CurrentUserContext */\n  const currentUser = React.useContext(CurrentUserContext);\n\n  return (\n    <main className=\"content page__content\">\n      <section className=\"profile\">\n        <div className=\"profile__avatar-container\">\n          <img className=\"profile__avatar\"\n               src={currentUser.avatar}\n               alt=\"Аватарка пользователя.\" />\n          <button className=\"profile__edit-avatar\"\n                  onClick={props.onEditAvatar}></button>\n        </div>\n        <div className=\"profile__info\">\n          <h1 className=\"profile__name\">{currentUser.name}</h1>\n          <button className=\"profile__edit-button\" type=\"button\"\n                  onClick={props.onEditProfile}></button>\n          <p className=\"profile__description\">{currentUser.about}</p>\n        </div>\n        <button className=\"profile__add-button\" type=\"button\"\n                onClick={props.onAddPlace}></button>\n      </section>\n\n      <section className=\"places content__places\">\n        <ul className=\"cards\">\n          { \n            props.isLoading ? \n            \"\" :\n            props.cards.map(({...card }) => (\n                <Card onCardClick={props.onCardClick}\n                      key={card._id}\n                      card={{...card}}\n                      onConfirmation={props.onConfirmation}\n                      onCardLike={props.onCardLike} >\n                </Card>\n              ) \n            )\n          }\n        </ul>\n      </section>\n    </main>\n  );\n}\n\nexport default Main;","import React from \"react\";\n\nfunction Footer () {\n  return (\n    <footer className=\"footer page__footer\">\n      <p className=\"footer__copyright\">&copy; 2021. Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\n\nfunction PopupWithForm (props) {\n\n  return (\n    <div className={`popup popup_type_${props.name}\n                  ${props.isOpen && \"popup_opened\"}`}>\n      <div className=\"popup__container popup__container_type_form\">\n        <h2 className=\"popup__title\">{props.title}</h2>\n        <form className=\"form\" name={`form-${props.name}`} onSubmit={props.onSubmit}>\n          {props.children}\n          <button className=\"form__button\" type=\"submit\">\n            {props.isLoading ? `${props.buttonText}...` : `${props.buttonText}`}\n          </button>\n        </form>\n        <button className=\"popup__icon-close\"\n                type=\"button\"\n                onClick={props.onClose}>\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default PopupWithForm;","import React from \"react\";\nimport PopupWithForm from './PopupWithForm'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup(props) {\n\n  /** Текущий пользователь */\n  const currentUser = React.useContext(CurrentUserContext);\n\n  const [name, SetName] = React.useState('');\n  const [description, SetDescription] = React.useState('');\n\n  /** Записывает информацию о пользователе в стейт-переменные */\n  React.useEffect(() => {\n    SetName(currentUser.name);\n    SetDescription(currentUser.about);\n  }, [currentUser, props.isOpen]); \n\n  /** Отправляет запрос к api. Обновляет информацию о пользователе */\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onUpdateUser({\n      name,\n      about: description,\n    });\n  }\n  \n  /** Записывает имя пользователя в стейт-переменную */\n  function handleChangeName(e) {\n    SetName(e.target.value);\n  }\n\n  /** Записывает описание пользователя в стейт-переменную */\n  function handleChangeDescription(e) {\n    SetDescription(e.target.value);\n  }\n\n  return (\n    <PopupWithForm title=\"Редактировать профиль\" name=\"edit-profile\" \n                   isOpen={props.isOpen}\n                   onClose={props.onClose}\n                   onSubmit={handleSubmit}\n                   isLoading={props.isLoading}\n                   buttonText=\"Сохранить\" >\n        <input id=\"name-user-input\" className=\"form__input popup__input_type_name\"\n               type=\"text\" name=\"name\" required minLength=\"2\" maxLength=\"40\"\n               placeholder=\"Имя пользователя\"\n               value={name || ''} onChange={handleChangeName} />\n        <span className=\"form__input-error name-user-input-error\"></span>\n        <input id=\"description-input\" className=\"form__input popup__input_type_description\"\n               type=\"text\" name=\"description\" required minLength=\"2\" maxLength=\"200\"\n               placeholder=\"Информация о пользователе\"\n               value={description || ''} onChange={handleChangeDescription} />\n        <span className=\"form__input-error description-input-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;","import React from \"react\";\nimport PopupWithForm from './PopupWithForm'\n\nfunction EditAvatarPopup(props) {\n\n  const [avatar, SetAvatar] = React.useState('');\n  const inputAvatarRef = React.useRef();\n\n  /** Отправляет запрос к api. Обновляет аватар пользователя */\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onUpdateAvatar({ avatar: inputAvatarRef.current.value });\n  }\n\n  /** Записывает ссылку на аватарку в стейт-переменную */\n  function handleChange() {\n    SetAvatar(inputAvatarRef.current.value);\n  }\n\n  /** Очищает поле ввода формы обновления аватарки пользователя */\n  React.useEffect(() => {\n    inputAvatarRef.current.value = '';\n  }, [props.isOpen]); \n\n  return (\n    <PopupWithForm title=\"Обновить аватар\" name=\"update-avatar\"\n                   isOpen={props.isOpen}\n                   onClose={props.onClose}\n                   onSubmit={handleSubmit}\n                   isLoading={props.isLoading}\n                   buttonText=\"Сохранить\" >\n      <input id=\"url-input-avatar\" className=\"form__input popup__input_type_link\"\n             type=\"url\" name=\"link\" required\n             placeholder=\"Ссылка на картинку\"\n             ref={inputAvatarRef} onChange={handleChange} />\n      <span className=\"form__input-error url-input-avatar-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup;","import React from \"react\";\nimport PopupWithForm from './PopupWithForm'\n\nfunction AddPlacePopup(props) {\n\n  const [name, SetName] = React.useState('');\n  const [link, SetLink] = React.useState('');\n\n  /** Отправляет запрос к api. Добавляет новую карточку */\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onAddPlace({\n      name,\n      link\n    });\n  }\n\n  /** Очищает поля ввода формы добавления новой карточки */\n  React.useEffect(() => {\n    SetName('');\n    SetLink('');\n  }, [props.isOpen]); \n\n  /** Записывает название карточки в стейт-переменную */\n  function handleChangeName(e) {\n    SetName(e.target.value);\n  }\n\n  /** Записывает ссылку на карточку в стейт-переменную */\n  function handleChangeLink(e) {\n    SetLink(e.target.value);\n  }\n\n  return (\n    <PopupWithForm title=\"Новое место\" name=\"add-new-place\"\n                   isOpen={props.isOpen}\n                   onClose={props.onClose}\n                   onSubmit={handleSubmit}\n                   isLoading={props.isLoading} \n                   buttonText=\"Создать\" >\n      <input id=\"name-picture-input\" className=\"popup__input popup__input_type_name\"\n             type=\"text\" name=\"name\" required minLength=\"2\" maxLength=\"30\"\n             placeholder=\"Название\"\n             value={name || ''} onChange={handleChangeName} />\n      <span className=\"popup__input-error name-picture-input-error\"></span>\n      <input id=\"url-input-place\" className=\"popup__input popup__input_type_link\"\n             type=\"url\" name=\"link\" required\n             placeholder=\"Ссылка на картинку\"\n             value={link || ''} onChange={handleChangeLink} />\n      <span className=\"popup__input-error url-input-place-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default AddPlacePopup;","import React from \"react\";\nimport PopupWithForm from './PopupWithForm'\n\nfunction ConfirmationPopup(props) {\n\n  /** Отправляет запрос к api. Удаляет карточку */\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onConfirmation(props.card);\n  }\n\n  return (\n    <PopupWithForm title=\"Вы уверены?\" name=\"confirmation\"\n                   isOpen={props.isOpen}\n                   onClose={props.onClose}\n                   onSubmit={handleSubmit}\n                   isLoading={props.isLoading}\n                   buttonText=\"Да\" >\n    </PopupWithForm>\n  );\n}\n\nexport default ConfirmationPopup;","import React from \"react\";\n\nfunction ImagePopup (props) {\n  \n  return (\n    <div className={`popup popup_type_image\n                  ${(Object.keys(props.card).length !== 0) && \"popup_opened\"}`}>\n      <div className=\"popup__container\">\n        <figure className=\"popup__container-image\">\n          <img className=\"popup__image\"\n              src={props.card.link}\n              alt={props.card.title} />\n          <figcaption className=\"popup__image-title\">{props.card.name}</figcaption>\n        </figure>\n        <button className=\"popup__icon-close\"\n                type=\"button\"\n                onClick={props.onClose}></button>\n      </div>\n    </div>\n  );\n}\n\nexport default ImagePopup;","import React from 'react';\n\nfunction LoginRegisterForm(props) {\n\n  const { title, textButton } = props;\n\n  const [password, SetPassword] = React.useState(\"\");\n  const [email, SetEmail] = React.useState(\"\");\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onSubmit(password, email);\n  }\n\n  /** Записывает пароль пользователя в стейт-переменную */\n  function handleChangePassword(e) {\n    SetPassword(e.target.value);\n  }\n\n  /** Записывает email пользователя в стейт-переменную */\n  function handleChangeEmail(e) {\n    SetEmail(e.target.value);\n  }\n\n  return (\n    <div className=\"content content_type_form\">\n      <h2 className=\"content__title\">{title}</h2>\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <input id=\"email-input\" className=\"form__input form__input_type_black\"\n               type=\"email\" name=\"email\" required\n               placeholder=\"Email\"\n               value={email || ''} onChange={handleChangeEmail} />\n        <span className=\"form__input-error email-input-error\"></span>\n        <input id=\"password-input\" className=\"form__input form__input_type_black\"\n               type=\"password\" name=\"password\" required minLength=\"2\" maxLength=\"200\"\n               placeholder=\"Пароль\"\n               value={password || ''} onChange={handleChangePassword} />\n        <span className=\"form__input-error password-input-error\"></span>\n        <button className=\"form__button form__button_type_white\" type=\"submit\">\n          {textButton}\n        </button>\n      </form>\n      {props.children}\n    </div>\n  );\n}\n\nexport default LoginRegisterForm;","import { baseUrlAuth } from './constants.js';\n\nclass Auth {\n    constructor(baseUrlAuth) {\n      this._baseUrlAuth = baseUrlAuth;\n    }\n\n    register(password, email) {\n      return fetch(`${this._baseUrlAuth}signup`, {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\" \n        },\n        body: JSON.stringify({\n          password: password,\n          email: email\n        })\n      })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n    };\n\n    authorization(password, email) {\n      return fetch(`${this._baseUrlAuth}signin`, {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\" \n        },\n        body: JSON.stringify({\n          password: password,\n          email: email\n        })\n      })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n    };\n\n    checkToken(jwt) {\n      return fetch(`${this._baseUrlAuth}users/me`, {\n        method: 'GET',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\" : `Bearer ${jwt}`\n        }\n      })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n    };\n}\n\nconst auth = new Auth(baseUrlAuth);\nexport default auth;\n\n","/* Данные для api проекта \"mesto\" */\nconst cohort = 'cohort-28';\nconst token = 'b5931bc5-3874-4455-9cea-b058f66f7d9b';\nconst baseUrl = 'https://mesto.nomoreparties.co/v1/'\n\n/* Данные для авторизации/регистрации проекта \"mesto\" */\nconst baseUrlAuth = 'https://auth.nomoreparties.co/';\n\nexport {\n  cohort,\n  token,\n  baseUrl,\n  baseUrlAuth\n};\n","import React from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport LoginRegisterForm from './LoginRegisterForm';\nimport auth from '../utils/Auth';\n\nfunction Register(props) {\n\n  const navigate = useNavigate(); \n\n  /** Записывает имя и адрес ссылки в стейт-переменные */\n  props.onPage(\"Войти\", \"/sign-in\");\n\n  /** Обработчик регистрации пользователя */\n  function handleUserRegister(password, email) {\n    auth.register(password, email)\n      .then((data) => {\n        console.log(data);\n        navigate('/sign-in');\n        props.onRegister(true);\n      })\n      .catch((err) => {\n        console.error(err);\n        props.onRegister(false);\n      })\n  }\n\n  return (\n    <LoginRegisterForm title=\"Регистрация\"\n                       textButton=\"Зарегистрироваться\"\n                       onSubmit={handleUserRegister} >\n      <Link to=\"/sign-in\" className=\"link link_type_small\">\n        Уже зарегистрированы? Войти\n      </Link>\n    </LoginRegisterForm>\n  );\n}\n\nexport default Register;","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport LoginRegisterForm from './LoginRegisterForm';\nimport auth from '../utils/Auth';\n\nfunction Login(props) {\n\n  const navigate = useNavigate(); \n\n  /** Записывает имя и адрес ссылки в стейт-переменные */\n  props.onPage(\"Регистрация\", \"/sign-up\");\n\n  /** Обработчик авторизации пользователя */\n  function handleUserAuthorization(password, email) {\n    auth.authorization(password, email)\n      .then((data) => {\n        props.onLogin(true);\n        props.SetUserEmail(email);\n        navigate('/');\n        localStorage.setItem('jwt', data.token);\n      })\n      .catch((err) => {\n        console.error(err);\n      })\n  }\n\n  return (\n    <LoginRegisterForm title=\"Вход\" textButton=\"Войти\" onSubmit={handleUserAuthorization} />\n  );\n}\n\nexport default Login;","import React from \"react\";\n\nfunction InfoToolTip(props) {\n  \n  const { isRegistrationSuccsses } = props;\n\n  const popupImageClassName = (isRegistrationSuccsses ?\n      \"popup__image_type_success\" :\n      \"popup__image_type_error\"\n    );\n\n  return (\n    <div className={`popup popup_type_${props.name}\n                  ${props.isOpen && \"popup_opened\"}`}>\n      <div className=\"popup__container popup__container_type_form\">\n        <div className={popupImageClassName}></div>\n        <p className=\"popup__title popup__title_type_center\">\n          { isRegistrationSuccsses ?\n            'Вы успешно зарегистрировались!' :\n            'Что-то пошло не так! Попробуйте ещё раз.'\n          }\n        </p>\n        <button className=\"popup__icon-close\"\n                type=\"button\"\n                onClick={props.onClose}>\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default InfoToolTip;","import { cohort } from './constants.js';\nimport { token } from './constants.js'\nimport { baseUrl } from './constants.js'\n\nclass Api {\n  constructor(cohort, token, baseUrl) {\n    this._cohort = cohort;\n    this._token = token;\n    this._baseUrl = baseUrl;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n}\n\n  updateUserInformation(nameUser, aboutUser) {\n    return fetch(`${this._baseUrl}${this._cohort}/users/me`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: nameUser,\n        about: aboutUser\n      })\n    })\n      .then(this._checkResponse)\n  }\n\n  updateUserAvatar(link) {\n    return fetch(`${this._baseUrl}${this._cohort}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        avatar: link,\n      })\n    })\n      .then(this._checkResponse)\n  }\n\n  getUserInformation() {\n    return fetch(`${this._baseUrl}${this._cohort}/users/me`, {\n      headers: {\n        authorization: this._token\n      }\n    })\n      .then(this._checkResponse)\n  }\n\n  getCards() {\n    return fetch(`${this._baseUrl}${this._cohort}/cards`, {\n      headers: {\n        authorization: this._token\n      }\n    })\n      .then(this._checkResponse)\n  }\n\n  addCard(nameCard, linkCard) {\n    return fetch(`${this._baseUrl}${this._cohort}/cards`, {\n      method: 'POST',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: nameCard,\n        link: linkCard\n      })\n    })\n      .then(this._checkResponse)\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    return fetch(`${this._baseUrl}${this._cohort}/cards/likes/${cardId}`, {\n      method: isLiked ? 'PUT' : 'DELETE',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(this._checkResponse)\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}${this._cohort}/cards/${cardId}`, {\n    method: 'DELETE',\n    headers: {\n        authorization: this._token\n      }\n    })\n      .then(this._checkResponse)\n  }\n\n}\n\nconst api = new Api(cohort, token, baseUrl);\nexport default api;","import React from 'react';\nimport { Routes, Route, Navigate, useNavigate } from 'react-router-dom';\nimport Header from './Header'\nimport Main from './Main'\nimport Footer from './Footer'\nimport EditProfilePopup from './EditProfilePopup'\nimport EditAvatarPopup from './EditAvatarPopup'\nimport AddPlacePopup from './AddPlacePopup'\nimport ConfirmationPopup from './ConfirmationPopup'\nimport ImagePopup from './ImagePopup'\nimport Register from './Register';\nimport Login from './Login';\nimport InfoToolTip from './InfoToolTip';\nimport api from '../utils/Api'\nimport auth from '../utils/Auth';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nimport '../index.css';\n\nfunction App() {\n\n  /** Email пользователя */\n  const [userEmail, SetUserEmail] = React.useState(\"\");\n\n  const navigate = useNavigate(); \n\n  /** Имя ссылки (для Header) */\n  const [linkName, SetLinkName] = React.useState(\"\");\n  /** Адрес ссылки (для Header) */\n  const [linkRoute, SetLinkRoute] = React.useState(\"\");\n\n  /** Записывает имя и адрес ссылки в стейт-переменные */\n  function onPage(name, route) {\n    SetLinkName(name);\n    SetLinkRoute(route);\n  }\n\n  /** Текущий пользователь */\n  const [currentUser, SetCurrentUser] = React.useState({});\n\n  /** Состояние загрузки */\n  const [isLoading, SetIsLoading] = React.useState(false);\n\n  /** Состояние регистрации */\n  const [isRegistrationSuccsses, SetIsRegistrationSuccsses] = React.useState(false);\n\n  /** Состояние авторизации */\n  const [loggedIn, SetLoggedIn] = React.useState(false);\n\n  /** Карточка (Для удаления) */\n  const [card, SetCard] = React.useState({});\n\n  const [isEditProfilePopupOpen, SetIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, SetIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, SetIsEditAvatarPopupOpen] = React.useState(false);\n  const [isConfirmationPopupOpen, SetIsConfirmationPopupOpen] = React.useState(false);\n  const [isRegistationResultPopupOpen, SetIsRegistationResultPopupOpen] = React.useState(false);\n\n  const [selectedCard, SetSelectedCard] = React.useState({});\n\n  /** Массив загруженных карточек */\n  const [cards, SetCards] = React.useState([]);\n\n  function handleSetUserEmail(email) {\n    SetUserEmail(email);\n  }\n\n  /** Проверяет наличие токена */\n  function tokenCheck() {\n    if (localStorage.getItem('jwt')){\n      const jwt = localStorage.getItem('jwt');\n      auth.checkToken(jwt)\n        .then((data) => {\n          SetLoggedIn(true);\n          handleSetUserEmail(data.data.email)\n          navigate('/');\n        })\n        .catch((err) => {\n          console.error(err);\n        })\n    }\n  }\n\n  /** Эффект при загрузке приложения */\n  React.useEffect(() => {\n    tokenCheck();\n  }, []);\n\n  /** Выходит из аккаунта. Удаляет токен */\n  function handleSignOutClick() {\n    navigate('/sign-in');\n    localStorage.removeItem('jwt');\n    SetLoggedIn(false);\n  }\n\n  /** Открывает окно редактирования профиля */\n  function handleEditProfileClick() {\n    SetIsEditProfilePopupOpen(true);\n  }\n\n  /** Открывает окно добавления новой карточки */\n  function handleAddPlaceClick() {\n    SetIsAddPlacePopupOpen(true);\n  }\n\n  /** Открывает окно обновления аватарки */\n  function handleEditAvatarClick() {\n    SetIsEditAvatarPopupOpen(true);\n  }\n\n  /** Открывает окно подтверждения */\n  function handleConfirmationClick(card) {\n    SetCard(card);\n    SetIsConfirmationPopupOpen(true);\n  }\n\n  /** Открывает окно с увеличенным изображением */\n  function handleCardClick(card) {\n    SetSelectedCard(card);\n  }\n\n  /** Открывает окно с результатом регистрации */\n  function handleRegistration(isSuccsses) {\n    SetIsRegistrationSuccsses(isSuccsses);\n    SetIsRegistationResultPopupOpen(true);\n  }\n\n  /** Обновляет стейт-переменную loggedIn */\n  function handleAuthorization(isSuccsses) {\n    SetLoggedIn(isSuccsses);\n  }\n\n  /** Закрывает все модальные окна */\n  function closeAllPopups() {\n    SetIsEditProfilePopupOpen(false);\n    SetIsAddPlacePopupOpen(false);\n    SetIsEditAvatarPopupOpen(false);\n    SetIsConfirmationPopupOpen(false);\n    SetIsRegistationResultPopupOpen(false);\n    SetSelectedCard({});\n  }\n\n  /** Запрашивает карточки и информацию о пользователе при загрузке страницы */\n  React.useEffect(() => {\n    SetIsLoading(true);\n    Promise.all([api.getUserInformation(), api.getCards()])\n      .then((data) => {\n        SetCurrentUser(data[0]);\n        SetCards(data[1].map((item) => (item)));\n      })\n      .catch((err) => {\n        console.error(err);\n      })\n      .finally(() => {\n        SetIsLoading(false);\n      });\n  }, [] );\n\n  /** Обновляет информацию о пользователе */\n  function handleUpdateUser({ name, about }) {\n    SetIsLoading(true);\n    api.updateUserInformation(name, about)\n      .then((data) => {\n        SetCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.error(err);\n      })\n      .finally(() => {\n        SetIsLoading(false);\n      });\n  }\n\n  /** Обновляет аватарку пользователя */\n  function handleUpdateAvatar({ avatar }) {\n    SetIsLoading(true);\n    api.updateUserAvatar(avatar)\n      .then((data) => {\n        SetCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.error(err);\n      })\n      .finally(() => {\n        SetIsLoading(false);\n      });\n  }\n\n  /** Добавляет новую карточку */\n  function handleAddPlaceSubmit({ name, link }) {\n    SetIsLoading(true);\n    api.addCard(name, link)\n      .then((newCard) => {\n        SetCards([newCard, ...cards]); \n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.error(err);\n      })\n      .finally(() => {\n        SetIsLoading(false);\n      });\n  }\n\n  /** Удаляет карточку  */\n  function handleCardDeleteSubmit(card) {\n    SetIsLoading(true);\n    api.deleteCard(card._id)\n      .then((data) => {\n        SetCards((state) => state.filter((c) => {\n          return (c._id !== card._id) //Возвращает все карточки кроме той которую удалили\n        }));\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.error(err);\n      })\n      .finally(() => {\n        SetIsLoading(false);\n      });\n  }\n\n  /** Определяет, ставил ли пользователь лайк для текущей карточки\n  *   Ставит/удаляет лайк   */\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        SetCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n      })\n      .catch((err) => {\n        console.error(err);\n      })\n  }\n\n  return (\n    <div className=\"root\">\n\n      <CurrentUserContext.Provider value={currentUser}>\n\n        <div className=\"page root__page\">\n          <Header linkName={linkName}\n                  linkRoute={linkRoute}\n                  signOut={handleSignOutClick}\n                  isLoggedIn={loggedIn}\n                  userEmail={userEmail} />\n          <Routes>\n              <Route path=\"/sign-in\" \n                     element={<Login\n                                onPage={onPage} \n                                onLogin={handleAuthorization}\n                                SetUserEmail={SetUserEmail} />}\n              />\n              <Route path=\"/sign-up\"\n                     element={<Register \n                                onPage={onPage}\n                                onRegister={handleRegistration}\n                              />}\n              />\n              <Route exact path=\"/\" element={\n                  loggedIn ? \n                    <Main onEditProfile={handleEditProfileClick}\n                          onAddPlace={handleAddPlaceClick}\n                          onEditAvatar={handleEditAvatarClick}\n                          onConfirmation={handleConfirmationClick}\n                          onCardClick={handleCardClick}\n                          cards={cards}\n                          onCardLike={handleCardLike}\n                          isLoading={isLoading}\n                          onPage={onPage}\n                    />  :\n                    <Navigate to=\"/sign-in\" />\n                }\n              />\n          </Routes>\n          <Footer />\n        </div>\n        \n        <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups}\n                          onUpdateUser={handleUpdateUser}\n                          isLoading={isLoading} />\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}\n                         onUpdateAvatar={handleUpdateAvatar}\n                         isLoading={isLoading} /> \n        <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}\n                       onAddPlace={handleAddPlaceSubmit}\n                       isLoading={isLoading} />\n        <ConfirmationPopup isOpen={isConfirmationPopupOpen} onClose={closeAllPopups}\n                                   onConfirmation={handleCardDeleteSubmit}\n                                   isLoading={isLoading}\n                                   card={card} />\n        <ImagePopup card={selectedCard} onClose={closeAllPopups}/>\n\n        <InfoToolTip isOpen={isRegistationResultPopupOpen}\n                     name=\"info-tool-tip\"\n                     onClose={closeAllPopups} \n                     onUpdateAvatar={handleRegistration}\n                     isRegistrationSuccsses={isRegistrationSuccsses} />\n\n      </CurrentUserContext.Provider>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}