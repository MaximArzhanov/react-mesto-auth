{"version":3,"sources":["components/Header.jsx","contexts/CurrentUserContext.js","components/Card.jsx","components/Main.jsx","components/Footer.jsx","components/PopupWithForm.jsx","components/EditProfilePopup.jsx","components/EditAvatarPopup.jsx","components/AddPlacePopup.jsx","components/ConfirmationPopup.jsx","components/ImagePopup.jsx","components/AuthPage.jsx","components/Register.jsx","components/Login.jsx","components/InfoToolTip.jsx","utils/Api.js","utils/constants.js","utils/Auth.js","components/ProtectedRoute.jsx","components/App.jsx","reportWebVitals.js","index.js"],"names":["Header","props","linkName","linkRoute","className","to","isLoggedIn","userEmail","onClick","signOut","CurrentUserContext","React","createContext","Card","memo","onCardClick","onCardLike","card","onConfirmation","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","src","link","alt","name","type","length","Main","useEffect","onPage","avatar","onEditAvatar","onEditProfile","about","onAddPlace","cards","map","Footer","PopupWithForm","isOpen","title","onSubmit","children","isLoading","buttonText","onClose","EditProfilePopup","useState","setName","description","setDescription","e","preventDefault","onUpdateUser","id","required","minLength","maxLength","placeholder","value","onChange","target","EditAvatarPopup","inputAvatarRef","useRef","current","onUpdateAvatar","ref","AddPlacePopup","setLink","ConfirmationPopup","ImagePopup","Object","keys","AuthPage","textButton","password","setPassword","email","setEmail","Register","Login","InfoToolTip","isRegistrationSuccsses","popupImageClassName","api","cohort","token","baseUrl","this","_cohort","_token","_baseUrl","res","ok","json","Promise","reject","status","nameUser","aboutUser","fetch","method","headers","authorization","body","JSON","stringify","then","_checkResponse","nameCard","linkCard","cardId","auth","baseUrlAuth","_baseUrlAuth","jwt","ProtectedRoute","Component","component","loggedIn","App","setUserEmail","navigate","useNavigate","setLinkName","setLinkRoute","route","setCurrentUser","setIsLoading","setIsRegistrationSuccsses","setLoggedIn","setCard","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmationPopupOpen","setIsConfirmationPopupOpen","isRegistationResultPopupOpen","setIsRegistationResultPopupOpen","selectedCard","setSelectedCard","setCards","tokenCheck","localStorage","getItem","checkToken","data","catch","err","console","error","handleRegistration","isSuccsses","closeAllPopups","all","getUserInformation","getCards","item","finally","closeByEscape","key","document","addEventListener","removeEventListener","Provider","removeItem","path","element","setItem","register","changeLikeCardStatus","newCard","state","c","updateUserInformation","updateUserAvatar","addCard","deleteCard","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c424c07e.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Header(props) {\n  const { linkName, linkRoute } = props;\n\n  function signOut() {\n    props.signOut();\n  }\n\n  return (\n    <header className=\"header\">\n      <Link to=\"/\" className=\"header__logo\"></Link>\n      <div className=\"header__container\">\n        <p className=\"header__email\">{props.isLoggedIn && props.userEmail}</p>\n        <Link to={linkRoute} className=\"link header__link\" onClick={signOut}>\n          {linkName}\n        </Link>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();","import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nconst Card = React.memo(({ onCardClick, onCardLike, card, onConfirmation }) => {\n  /** Подписка на контекст CurrentUserContext */\n  const currentUser = React.useContext(CurrentUserContext);\n\n  /** Определяет, является ли пользователь владельцем текущей карточки */\n  const isOwn = card.owner._id === currentUser._id;\n\n  /** Содержит классы для кнопки удаления карточки  */\n  const cardDeleteButtonClassName = `card__trash ${\n    isOwn ? \"\" : \"card__trash_disable\"\n  }`;\n\n  /** Определяет, ставил ли пользователь лайк для текущей карточки */\n  const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n  /** Содержит классы для кнопки лайк */\n  const cardLikeButtonClassName = `card__icon-like ${\n    isLiked ? \"card__icon-like_active\" : \"\"\n  }`;\n\n  /** Событие при клике на изображение карточки */\n  function handleClick() {\n    onCardClick(card);\n  }\n\n  /** Событие при клике на кнопку \"лайк\" */\n  function handleLikeClick() {\n    onCardLike(card);\n  }\n\n  /** Событие при клике на кнопку \"удалить\" (Открывает окно подтверждения) */\n  function handleDeleteClick() {\n    onConfirmation(card);\n  }\n\n  return (\n    <li className=\"card\">\n      <img\n        className=\"card__image\"\n        src={card.link}\n        alt={card.name}\n        onClick={handleClick}\n      />\n      <h2 className=\"card__name\">{card.name}</h2>\n      <div className=\"card__like-container\">\n        <button\n          className={cardLikeButtonClassName}\n          type=\"button\"\n          onClick={handleLikeClick}\n        ></button>\n        <span className=\"card__like-counter\">{card.likes.length}</span>\n      </div>\n      <button\n        className={cardDeleteButtonClassName}\n        type=\"button\"\n        onClick={handleDeleteClick}\n      ></button>\n    </li>\n  );\n}\n); \n\nexport default Card;","import React from \"react\";\nimport Card from \"./Card\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction Main(props) {\n  /** Записывает имя и адрес ссылки в стейт-переменные */\n  React.useEffect(() => {\n    props.onPage(\"Выйти\", \"/sign-in\");\n  }, []);\n\n  /** Подписка на контекст CurrentUserContext */\n  const currentUser = React.useContext(CurrentUserContext);\n\n  return (\n    <main className=\"content page__content\">\n      <section className=\"profile\">\n        <div className=\"profile__avatar-container\">\n          <img\n            className=\"profile__avatar\"\n            src={currentUser.avatar}\n            alt=\"Аватарка пользователя.\"\n          />\n          <button\n            className=\"profile__edit-avatar\"\n            onClick={props.onEditAvatar}\n          ></button>\n        </div>\n        <div className=\"profile__info\">\n          <h1 className=\"profile__name\">{currentUser.name}</h1>\n          <button\n            className=\"profile__edit-button\"\n            type=\"button\"\n            onClick={props.onEditProfile}\n          ></button>\n          <p className=\"profile__description\">{currentUser.about}</p>\n        </div>\n        <button\n          className=\"profile__add-button\"\n          type=\"button\"\n          onClick={props.onAddPlace}\n        ></button>\n      </section>\n\n      <section className=\"places content__places\">\n        <ul className=\"cards\">\n          {props.cards.map(({ ...card }) => (\n            <Card\n              onCardClick={props.onCardClick}\n              key={card._id}\n              card={{ ...card }}\n              onConfirmation={props.onConfirmation}\n              onCardLike={props.onCardLike}\n            ></Card>\n          ))}\n        </ul>\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","import React from \"react\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer page__footer\">\n      <p className=\"footer__copyright\">&copy; 2021. Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\n\nfunction PopupWithForm(props) {\n  return (\n    <div\n      className={`popup popup_type_${props.name}\n                  ${props.isOpen && \"popup_opened\"}`}\n    >\n      <div className=\"popup__container popup__container_type_form\">\n        <h2 className=\"popup__title\">{props.title}</h2>\n        <form\n          className=\"form\"\n          name={`form-${props.name}`}\n          onSubmit={props.onSubmit}\n        >\n          {props.children}\n          <button className=\"form__button\" type=\"submit\">\n            {props.isLoading ? `${props.buttonText}...` : `${props.buttonText}`}\n          </button>\n        </form>\n        <button\n          className=\"popup__icon-close\"\n          type=\"button\"\n          onClick={props.onClose}\n        ></button>\n      </div>\n    </div>\n  );\n}\n\nexport default PopupWithForm;\n","import React from \"react\";\nimport PopupWithForm from './PopupWithForm'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup(props) {\n  /** Текущий пользователь */\n  const currentUser = React.useContext(CurrentUserContext);\n\n  const [name, setName] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n\n  /** Записывает информацию о пользователе в стейт-переменные */\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser, props.isOpen]);\n\n  /** Отправляет запрос к api. Обновляет информацию о пользователе */\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onUpdateUser({\n      name,\n      about: description,\n    });\n  }\n\n  /** Записывает имя пользователя в стейт-переменную */\n  function handleChangeName(e) {\n    setName(e.target.value);\n  }\n\n  /** Записывает описание пользователя в стейт-переменную */\n  function handleChangeDescription(e) {\n    setDescription(e.target.value);\n  }\n\n  return (\n    <PopupWithForm\n      title=\"Редактировать профиль\"\n      name=\"edit-profile\"\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n      isLoading={props.isLoading}\n      buttonText=\"Сохранить\"\n    >\n      <input\n        id=\"name-user-input\"\n        className=\"form__input popup__input_type_name\"\n        type=\"text\"\n        name=\"name\"\n        required\n        minLength=\"2\"\n        maxLength=\"40\"\n        placeholder=\"Имя пользователя\"\n        value={name || \"\"}\n        onChange={handleChangeName}\n      />\n      <span className=\"form__input-error name-user-input-error\"></span>\n      <input\n        id=\"description-input\"\n        className=\"form__input popup__input_type_description\"\n        type=\"text\"\n        name=\"description\"\n        required\n        minLength=\"2\"\n        maxLength=\"200\"\n        placeholder=\"Информация о пользователе\"\n        value={description || \"\"}\n        onChange={handleChangeDescription}\n      />\n      <span className=\"form__input-error description-input-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;","import React from \"react\";\nimport PopupWithForm from './PopupWithForm'\n\nfunction EditAvatarPopup(props) {\n\n  const inputAvatarRef = React.useRef();\n\n  /** Отправляет запрос к api. Обновляет аватар пользователя */\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onUpdateAvatar({ avatar: inputAvatarRef.current.value });\n  }\n\n  /** Очищает поле ввода формы обновления аватарки пользователя */\n  React.useEffect(() => {\n    inputAvatarRef.current.value = \"\";\n  }, [props.isOpen]); \n\n  return (\n    <PopupWithForm\n      title=\"Обновить аватар\"\n      name=\"update-avatar\"\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n      isLoading={props.isLoading}\n      buttonText=\"Сохранить\"\n    >\n      <input\n        id=\"url-input-avatar\"\n        className=\"form__input popup__input_type_link\"\n        type=\"url\"\n        name=\"link\"\n        required\n        placeholder=\"Ссылка на картинку\"\n        ref={inputAvatarRef}\n      />\n      <span className=\"form__input-error url-input-avatar-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup;","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction AddPlacePopup(props) {\n  const [name, setName] = React.useState(\"\");\n  const [link, setLink] = React.useState(\"\");\n\n  /** Отправляет запрос к api. Добавляет новую карточку */\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onAddPlace({\n      name,\n      link,\n    });\n  }\n\n  /** Очищает поля ввода формы добавления новой карточки */\n  React.useEffect(() => {\n    setName(\"\");\n    setLink(\"\");\n  }, [props.isOpen]);\n\n  /** Записывает название карточки в стейт-переменную */\n  function handleChangeName(e) {\n    setName(e.target.value);\n  }\n\n  /** Записывает ссылку на карточку в стейт-переменную */\n  function handleChangeLink(e) {\n    setLink(e.target.value);\n  }\n\n  return (\n    <PopupWithForm\n      title=\"Новое место\"\n      name=\"add-new-place\"\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n      isLoading={props.isLoading}\n      buttonText=\"Создать\"\n    >\n      <input\n        id=\"name-picture-input\"\n        className=\"popup__input popup__input_type_name\"\n        type=\"text\"\n        name=\"name\"\n        required\n        minLength=\"2\"\n        maxLength=\"30\"\n        placeholder=\"Название\"\n        value={name || \"\"}\n        onChange={handleChangeName}\n      />\n      <span className=\"popup__input-error name-picture-input-error\"></span>\n      <input\n        id=\"url-input-place\"\n        className=\"popup__input popup__input_type_link\"\n        type=\"url\"\n        name=\"link\"\n        required\n        placeholder=\"Ссылка на картинку\"\n        value={link || \"\"}\n        onChange={handleChangeLink}\n      />\n      <span className=\"popup__input-error url-input-place-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default AddPlacePopup;\n","import React from \"react\";\nimport PopupWithForm from './PopupWithForm'\n\nfunction ConfirmationPopup(props) {\n\n  /** Отправляет запрос к api. Удаляет карточку */\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onConfirmation(props.card);\n  }\n\n  return (\n    <PopupWithForm\n      title=\"Вы уверены?\"\n      name=\"confirmation\"\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n      isLoading={props.isLoading}\n      buttonText=\"Да\"\n    ></PopupWithForm>\n  );\n}\n\nexport default ConfirmationPopup;","import React from \"react\";\n\nfunction ImagePopup(props) {\n  return (\n    <div\n      className={`popup popup_type_image\n                  ${Object.keys(props.card).length !== 0 && \"popup_opened\"}`}\n    >\n      <div className=\"popup__container\">\n        <figure className=\"popup__container-image\">\n          <img\n            className=\"popup__image\"\n            src={props.card.link}\n            alt={props.card.title}\n          />\n          <figcaption className=\"popup__image-title\">\n            {props.card.name}\n          </figcaption>\n        </figure>\n        <button\n          className=\"popup__icon-close\"\n          type=\"button\"\n          onClick={props.onClose}\n        ></button>\n      </div>\n    </div>\n  );\n}\n\nexport default ImagePopup;\n","import React from \"react\";\n\nfunction AuthPage(props) {\n  const { title, textButton } = props;\n\n  const [password, setPassword] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onSubmit(password, email);\n  }\n\n  /** Записывает пароль пользователя в стейт-переменную */\n  function handleChangePassword(e) {\n    setPassword(e.target.value);\n  }\n\n  /** Записывает email пользователя в стейт-переменную */\n  function handleChangeEmail(e) {\n    setEmail(e.target.value);\n  }\n\n  return (\n    <div className=\"content content_type_form\">\n      <h2 className=\"content__title\">{title}</h2>\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <input\n          id=\"email-input\"\n          className=\"form__input form__input_type_black\"\n          type=\"email\"\n          name=\"email\"\n          required\n          placeholder=\"Email\"\n          value={email || \"\"}\n          onChange={handleChangeEmail}\n        />\n        <span className=\"form__input-error email-input-error\"></span>\n        <input\n          id=\"password-input\"\n          className=\"form__input form__input_type_black\"\n          type=\"password\"\n          name=\"password\"\n          required\n          minLength=\"2\"\n          maxLength=\"200\"\n          placeholder=\"Пароль\"\n          value={password || \"\"}\n          onChange={handleChangePassword}\n        />\n        <span className=\"form__input-error password-input-error\"></span>\n        <button className=\"form__button form__button_type_white\" type=\"submit\">\n          {textButton}\n        </button>\n      </form>\n      {props.children}\n    </div>\n  );\n}\n\nexport default AuthPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthPage from \"./AuthPage\";\n\nfunction Register(props) {\n  /** Записывает имя и адрес ссылки в стейт-переменные */\n  React.useEffect(() => {\n    props.onPage(\"Войти\", \"/sign-in\");\n  }, []);\n\n  return (\n    <AuthPage\n      title=\"Регистрация\"\n      textButton=\"Зарегистрироваться\"\n      onSubmit={props.onSubmit}\n    >\n      <Link to=\"/sign-in\" className=\"link link_type_small\">\n        Уже зарегистрированы? Войти\n      </Link>\n    </AuthPage>\n  );\n}\n\nexport default Register;\n","import React from \"react\";\nimport AuthPage from \"./AuthPage\";\n\nfunction Login(props) {\n\n  /** Записывает имя и адрес ссылки в стейт-переменные */\n  React.useEffect(() => {\n    props.onPage(\"Регистрация\", \"/sign-up\");\n  }, []);\n\n  return (\n    <AuthPage\n      title=\"Вход\"\n      textButton=\"Войти\"\n      onSubmit={props.onSubmit}\n    />\n  );\n}\n\nexport default Login;\n","import React from \"react\";\n\nfunction InfoToolTip(props) {\n  const { isRegistrationSuccsses } = props;\n\n  const popupImageClassName = isRegistrationSuccsses\n    ? \"popup__image_type_success\"\n    : \"popup__image_type_error\";\n\n  return (\n    <div\n      className={`popup popup_type_${props.name}\n                  ${props.isOpen && \"popup_opened\"}`}\n    >\n      <div className=\"popup__container popup__container_type_form\">\n        <div className={popupImageClassName}></div>\n        <p className=\"popup__title popup__title_type_center\">\n          {isRegistrationSuccsses\n            ? \"Вы успешно зарегистрировались!\"\n            : \"Что-то пошло не так! Попробуйте ещё раз.\"}\n        </p>\n        <button\n          className=\"popup__icon-close\"\n          type=\"button\"\n          onClick={props.onClose}\n        ></button>\n      </div>\n    </div>\n  );\n}\n\nexport default InfoToolTip;\n","import { cohort } from './constants.js';\nimport { token } from './constants.js'\nimport { baseUrl } from './constants.js'\n\nclass Api {\n  constructor(cohort, token, baseUrl) {\n    this._cohort = cohort;\n    this._token = token;\n    this._baseUrl = baseUrl;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n}\n\n  updateUserInformation(nameUser, aboutUser) {\n    return fetch(`${this._baseUrl}${this._cohort}/users/me`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: nameUser,\n        about: aboutUser\n      })\n    })\n      .then(this._checkResponse)\n  }\n\n  updateUserAvatar(link) {\n    return fetch(`${this._baseUrl}${this._cohort}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        avatar: link,\n      })\n    })\n      .then(this._checkResponse)\n  }\n\n  getUserInformation() {\n    return fetch(`${this._baseUrl}${this._cohort}/users/me`, {\n      headers: {\n        authorization: this._token\n      }\n    })\n      .then(this._checkResponse)\n  }\n\n  getCards() {\n    return fetch(`${this._baseUrl}${this._cohort}/cards`, {\n      headers: {\n        authorization: this._token\n      }\n    })\n      .then(this._checkResponse)\n  }\n\n  addCard(nameCard, linkCard) {\n    return fetch(`${this._baseUrl}${this._cohort}/cards`, {\n      method: 'POST',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: nameCard,\n        link: linkCard\n      })\n    })\n      .then(this._checkResponse)\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    return fetch(`${this._baseUrl}${this._cohort}/cards/likes/${cardId}`, {\n      method: isLiked ? 'PUT' : 'DELETE',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(this._checkResponse)\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}${this._cohort}/cards/${cardId}`, {\n    method: 'DELETE',\n    headers: {\n        authorization: this._token\n      }\n    })\n      .then(this._checkResponse)\n  }\n\n}\n\nconst api = new Api(cohort, token, baseUrl);\nexport default api;","/* Данные для api проекта \"mesto\" */\nconst cohort = 'cohort-28';\nconst token = 'b5931bc5-3874-4455-9cea-b058f66f7d9b';\nconst baseUrl = 'https://mesto.nomoreparties.co/v1/'\n\n/* Данные для авторизации/регистрации проекта \"mesto\" */\nconst baseUrlAuth = 'https://auth.nomoreparties.co/';\n\nexport {\n  cohort,\n  token,\n  baseUrl,\n  baseUrlAuth\n};\n","import { baseUrlAuth } from './constants.js';\n\nclass Auth {\n    constructor(baseUrlAuth) {\n      this._baseUrlAuth = baseUrlAuth;\n    }\n\n    _checkResponse(res) {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n\n    register(password, email) {\n      return fetch(`${this._baseUrlAuth}signup`, {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\" \n        },\n        body: JSON.stringify({\n          password: password,\n          email: email\n        })\n      })\n      .then(this._checkResponse)\n    };\n\n    authorization(password, email) {\n      return fetch(`${this._baseUrlAuth}signin`, {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\" \n        },\n        body: JSON.stringify({\n          password: password,\n          email: email\n        })\n      })\n      .then(this._checkResponse)\n    };\n\n    checkToken(jwt) {\n      return fetch(`${this._baseUrlAuth}users/me`, {\n        method: 'GET',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\" : `Bearer ${jwt}`\n        }\n      })\n      .then(this._checkResponse)\n    };\n}\n\nconst auth = new Auth(baseUrlAuth);\nexport default auth;\n\n","import React from \"react\";\nimport { Navigate } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ component: Component, ...props }) => {\n  return (\n    props.loggedIn ? <Component {...props} /> : <Navigate to=\"/sign-in\" />\n  );\n};\n\nexport default ProtectedRoute; ","import React from \"react\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport ConfirmationPopup from \"./ConfirmationPopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\nimport InfoToolTip from \"./InfoToolTip\";\nimport api from \"../utils/Api\";\nimport auth from \"../utils/Auth\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nimport \"../index.css\";\n\nfunction App() {\n\n  /** Email пользователя */\n  const [userEmail, setUserEmail] = React.useState(\"\");\n\n  const navigate = useNavigate();\n\n  /** Имя ссылки (для Header) */\n  const [linkName, setLinkName] = React.useState(\"\");\n  /** Адрес ссылки (для Header) */\n  const [linkRoute, setLinkRoute] = React.useState(\"\");\n\n  /** Записывает имя и адрес ссылки в стейт-переменные */\n  function onPage(name, route) {\n    setLinkName(name);\n    setLinkRoute(route);\n  }\n\n  /** Текущий пользователь */\n  const [currentUser, setCurrentUser] = React.useState({});\n\n  /** Состояние загрузки */\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  /** Состояние регистрации */\n  const [isRegistrationSuccsses, setIsRegistrationSuccsses] =\n    React.useState(false);\n\n  /** Состояние авторизации */\n  const [loggedIn, setLoggedIn] = React.useState(false);\n\n  /** Карточка (Для удаления) */\n  const [card, setCard] = React.useState({});\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] =\n    React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] =\n    React.useState(false);\n  const [isConfirmationPopupOpen, setIsConfirmationPopupOpen] =\n    React.useState(false);\n  const [isRegistationResultPopupOpen, setIsRegistationResultPopupOpen] =\n    React.useState(false);\n\n  const [selectedCard, setSelectedCard] = React.useState({});\n\n  /** Массив загруженных карточек */\n  const [cards, setCards] = React.useState([]);\n\n  function handleSetUserEmail(email) {\n    setUserEmail(email);\n  }\n\n  /** Проверяет наличие токена */\n  function tokenCheck() {\n    if (localStorage.getItem(\"jwt\")) {\n      const jwt = localStorage.getItem(\"jwt\");\n      auth.checkToken(jwt)\n        .then((data) => {\n          setLoggedIn(true);\n          handleSetUserEmail(data.data.email);\n          navigate(\"/\");\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    }\n  }\n\n  /** Эффект при загрузке приложения */\n  React.useEffect(() => {\n    tokenCheck();\n  }, []);\n\n  /** Выходит из аккаунта. Удаляет токен */\n  function handleSignOutClick() {\n    navigate(\"/sign-in\");\n    localStorage.removeItem(\"jwt\");\n    setLoggedIn(false);\n  }\n\n  /** Открывает окно редактирования профиля */\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  /** Открывает окно добавления новой карточки */\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  /** Открывает окно обновления аватарки */\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  /** Открывает окно подтверждения */\n  function handleConfirmationClick(card) {\n    setCard(card);\n    setIsConfirmationPopupOpen(true);\n  }\n\n  /** Открывает окно с увеличенным изображением */\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  /** Открывает окно с результатом регистрации */\n  function handleRegistration(isSuccsses) {\n    setIsRegistrationSuccsses(isSuccsses);\n    setIsRegistationResultPopupOpen(true);\n  }\n\n  /** Закрывает все модальные окна */\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsConfirmationPopupOpen(false);\n    setIsRegistationResultPopupOpen(false);\n    setSelectedCard({});\n  }\n\n  /** Запрашивает карточки и информацию о пользователе при загрузке страницы */\n  React.useEffect(() => {\n    setIsLoading(true);\n    Promise.all([api.getUserInformation(), api.getCards()])\n      .then((data) => {\n        setCurrentUser(data[0]);\n        setCards(data[1].map((item) => item));\n      })\n      .catch((err) => {\n        console.error(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  /** Обновляет информацию о пользователе */\n  function handleUpdateUser({ name, about }) {\n    setIsLoading(true);\n    api.updateUserInformation(name, about)\n      .then((data) => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.error(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n\n  /** Обновляет аватарку пользователя */\n  function handleUpdateAvatar({ avatar }) {\n    setIsLoading(true);\n    api.updateUserAvatar(avatar)\n      .then((data) => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.error(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n\n  /** Добавляет новую карточку */\n  function handleAddPlaceSubmit({ name, link }) {\n    setIsLoading(true);\n    api.addCard(name, link)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.error(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n\n  /** Удаляет карточку  */\n  function handleCardDeleteSubmit(card) {\n    setIsLoading(true);\n    api.deleteCard(card._id)\n      .then((data) => {\n        setCards((state) =>\n          state.filter((c) => {\n            return c._id !== card._id; //Возвращает все карточки кроме той которую удалили\n          })\n        );\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.error(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n\n  /** Определяет, ставил ли пользователь лайк для текущей карточки\n   *   Ставит/удаляет лайк   */\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        setCards((state) =>\n          state.map((c) => (c._id === card._id ? newCard : c))\n        );\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  /** Закрывает модальное окно при нажатии кнопки Escape */\n  React.useEffect(() => {\n    const closeByEscape = (e) => {\n      if (e.key === \"Escape\") {\n        closeAllPopups();\n      }\n    }\n    document.addEventListener(\"keydown\", closeByEscape);\n    return () => document.removeEventListener(\"keydown\", closeByEscape);\n  }, [])\n\n  /** Обработчик регистрации пользователя */\n  function handleUserRegister(password, email) {\n    auth.register(password, email)\n      .then((data) => {\n        navigate('/sign-in');\n        handleRegistration(true);\n      })\n      .catch((err) => {\n        console.error(err);\n        handleRegistration(false);\n      })\n  }\n\n  /** Обработчик авторизации пользователя */\n  function handleUserAuthorization(password, email) {\n    auth.authorization(password, email)\n      .then((data) => {\n        setLoggedIn(true);\n        setUserEmail(email);\n        navigate(\"/\");\n        localStorage.setItem(\"jwt\", data.token);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  return (\n    <div className=\"root\">\n      <CurrentUserContext.Provider value={currentUser}>\n        <div className=\"page root__page\">\n          <Header\n            linkName={linkName}\n            linkRoute={linkRoute}\n            signOut={handleSignOutClick}\n            isLoggedIn={loggedIn}\n            userEmail={userEmail}\n          />\n          <Routes>\n            <Route\n              path=\"/sign-in\"\n              element={\n                <Login\n                  onPage={onPage}\n                  onSubmit={handleUserAuthorization}\n                  setUserEmail={setUserEmail}\n                />\n              }\n            />\n            <Route\n              path=\"/sign-up\"\n              element={\n                <Register \n                  onPage={onPage} \n                  onSubmit={handleUserRegister}\n                />\n              }\n            />\n            <Route\n              path=\"/\"\n              element={\n                <ProtectedRoute\n                  loggedIn={loggedIn}\n                  component={Main}\n                  onEditProfile={handleEditProfileClick}\n                  onAddPlace={handleAddPlaceClick}\n                  onEditAvatar={handleEditAvatarClick}\n                  onConfirmation={handleConfirmationClick}\n                  onCardClick={handleCardClick}\n                  cards={cards}\n                  onCardLike={handleCardLike}\n                  isLoading={isLoading}\n                  onPage={onPage}\n                />\n              }\n            />\n          </Routes>\n          <Footer />\n        </div>\n\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n          isLoading={isLoading}\n        />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n          isLoading={isLoading}\n        />\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n          isLoading={isLoading}\n        />\n        <ConfirmationPopup\n          isOpen={isConfirmationPopupOpen}\n          onClose={closeAllPopups}\n          onConfirmation={handleCardDeleteSubmit}\n          isLoading={isLoading}\n          card={card}\n        />\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n\n        <InfoToolTip\n          isOpen={isRegistationResultPopupOpen}\n          name=\"info-tool-tip\"\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleRegistration}\n          isRegistrationSuccsses={isRegistrationSuccsses}\n        />\n      </CurrentUserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}